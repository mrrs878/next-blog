{"pageProps":{"post":{"title":"前端架构&软实力-前端埋点","tags":["埋点"],"categories":"前端架构&软实力","description":"# WHAT\n\n在线上项目中，需要统计产品中用户行为和使用情况，从而可以从用户和产品的角度去了解用户群体，从而升级和迭代产品，使其更加贴近用户。用户行为数据可以通过前端**数据监控**的方式获得，除此之外，前端还需要实现**性能监控**和**异常监控**。\n\n**实现前端监控**有三个步骤：**前端埋点**和上报、数据处理和数据分析。\n\n## 数据监控\n\n数据监控就是监听用户信息和行为，常见的","createDate":"2020-06-04 22:35:12","updateDate":"2021-02-20 17:15:22","body":"<h1 id=\"what\">WHAT</h1>\n<p>在线上项目中，需要统计产品中用户行为和使用情况，从而可以从用户和产品的角度去了解用户群体，从而升级和迭代产品，使其更加贴近用户。用户行为数据可以通过前端<strong>数据监控</strong>的方式获得，除此之外，前端还需要实现<strong>性能监控</strong>和<strong>异常监控</strong>。</p>\n<p><strong>实现前端监控</strong>有三个步骤：<strong>前端埋点</strong>和上报、数据处理和数据分析。</p>\n<h2 id=\"数据监控\">数据监控</h2>\n<p>数据监控就是监听用户信息和行为，常见的监控项有：</p>\n<ul>\n<li>PV（page view，页面访问量）</li>\n<li>UV（unique view，独立访客）</li>\n<li>用户在每一个页面停留的时间</li>\n<li>用户通过什么入口访问该页面</li>\n<li>用户在相应页面触发的行为</li>\n</ul>\n<h2 id=\"性能监控\">性能监控</h2>\n<p>性能监控指监听前端的性能，主要包括监听网页或者产品在用户端的体验。常见的性能监控项包括：</p>\n<ul>\n<li>不同用户、不同机型和不同系统下的首屏加载时间</li>\n<li>http等请求的响应时间</li>\n<li>静态资源整体下载时间</li>\n<li>页面渲染时间</li>\n<li>页面交互动画完成时间</li>\n</ul>\n<h2 id=\"异常监控\">异常监控</h2>\n<p>由于产品的前端代码在执行过程中也会发生异常，因此需要引入异常监控。及时的上报异常情况，可以避免线上故障的发上。虽然大部分异常可以通过 try catch 的方式捕获，但是比如内存泄漏以及其他偶现的异常难以捕获。常见的需要监控的异常包括：</p>\n<ul>\n<li>Javascript 的异常监控</li>\n<li>样式丢失的异常监控</li>\n<li>服务器请求的异常监控</li>\n</ul>\n<h1 id=\"why\">WHY</h1>\n<p>获取用户基本信息、行为以及跟踪产品在客户端的使用情况，并以监控数据为基础，指明产品优化的方向。</p>\n<h1 id=\"how\">HOW</h1>\n<h2 id=\"手动埋点\">手动埋点</h2>\n<p>也称代码埋点，即纯手动写代码，调用埋点SDK的函数，在需要埋点的业务逻辑功能位置调用接口上报埋点数据，像<a href=\"https://links.jianshu.com/go?to=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%3A%2F%2Fwww.umeng.com%2F\">友盟</a>、<a href=\"https://links.jianshu.com/go?to=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%3A%2F%2Ftongji.baidu.com%2Fweb%2Fwelcome%2Flogin\">百度统计</a>等第三方数据统计服务商大都采用这种方案。</p>\n<p>优势：</p>\n<ul>\n<li>可自定义属性，自定义事件</li>\n<li>可以细化需求</li>\n<li>相比其他埋点方式减少服务器压力</li>\n</ul>\n<p>劣势：</p>\n<ul>\n<li>工程量大的话，手动埋点会出翔漏洞，不方便审查</li>\n<li>需求变更需重新埋点，成本高</li>\n</ul>\n<h2 id=\"可视化埋点\">可视化埋点</h2>\n<p>通过可视化交互的手段，代替上述的代码埋点。将业务代码和埋点代码分离，提供一个可视化交互的页面，输入为业务代码，通过这个可视化系统，可以在业务代码中自定义的增加埋点事件等等，最后输出的代码耦合了业务代码和埋点代码。缺点就是可以埋点的控件有限，不能手动定制。</p>\n<p>可视化埋点听起来比较高大上，实际上跟代码埋点还是区别不大。也就是用一个系统来实现手动插入代码埋点的过程。比如国外比较早做可视化的是 <a href=\"https://links.jianshu.com/go?to=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%3A%2F%2Fmixpanel.com%2F\">Mixpanel</a>，国内较早支持可视化埋点的有<a href=\"https://links.jianshu.com/go?to=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%3A%2F%2Fwww.talkingdata.com%2F\">TalkingData</a>、<a href=\"https://links.jianshu.com/go?to=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%3A%2F%2Fzhugeio.com%2F\">诸葛 IO</a>，2017年腾讯的 <a href=\"https://links.jianshu.com/go?to=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%3A%2F%2Fmta.qq.com%2F\">MTA</a> 也宣布支持可视化埋点；相比于手动埋点更新困难，埋点成本高的问题，可视化埋点优化了移动运营中数据采集的流程，能够支持产品运营随时调整埋点，无需再走发版流程，直接把配置结果推入到前端，数据采集流程更简化，也更方便产品的迭代。</p>\n<p>可视化埋点中多数基于Xpath的方案，XPath 是一门在 XML 文档中查找信息的语言，XPath 可用来在 XML 文档中对元素和属性进行遍历。</p>\n<h2 id=\"无埋点\">无埋点</h2>\n<p>无埋点则是前端自动采集全部事件，上报埋点数据，由后端来过滤和计算出有用的数据。</p>\n<p>优点:</p>\n<ol>\n<li>前端只要一次加载埋点脚本</li>\n</ol>\n<p>缺点:</p>\n<ol>\n<li>服务器性能压力山大</li>\n</ol>\n<p>采用无埋点技术的有主流的 <a href=\"https://links.jianshu.com/go?to=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%3A%2F%2Fwww.growingio.com%2F\">GrowingIO</a>、<a href=\"https://links.jianshu.com/go?to=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%3A%2F%2Fwww.sensorsdata.cn%2F\">神策</a>。</p>\n<p>参考：</p>\n<p><a href=\"https://segmentfault.com/a/1190000015864670\">前端监控和前端埋点方案设计</a></p>\n<p><a href=\"https://www.jianshu.com/p/645a26619508\">小谈前端埋点</a></p>\n"}},"__N_SSG":true}