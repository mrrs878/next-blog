{"pageProps":{"post":{"title":"前端架构&软实力-移动端适配","tags":["移动端适配"],"categories":"前端架构&软实力","description":"# 移动端适配具体含义\n\n为了在移动端让页面获得更好的显示效果，我们必须让**布局视口、视觉视口都尽可能等于理想视口**，但这并不能保证它们显示完全一致，我们需要一种方案（rem + vw适配）来让设计稿得到更完美的适配。\n\n# 三个视口\n\n1. 布局视口\n\n   ![布局视口](https://user-gold-cdn.xitu.io/2019/5/17/16ac3a666e96ff01?","createDate":"2020-04-21 22:33:00","updateDate":"2021-02-20 17:16:39","body":"<h1 id=\"移动端适配具体含义\">移动端适配具体含义</h1>\n<p>为了在移动端让页面获得更好的显示效果，我们必须让<strong>布局视口、视觉视口都尽可能等于理想视口</strong>，但这并不能保证它们显示完全一致，我们需要一种方案（rem + vw适配）来让设计稿得到更完美的适配。</p>\n<h1 id=\"三个视口\">三个视口</h1>\n<ol>\n<li><p>布局视口</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2019/5/17/16ac3a666e96ff01?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"布局视口\">\n布局视口(<code>layout viewport</code>)：当我们以百分比来指定一个元素的大小时，它的计算值是由这个元素的包含块计算而来的。当这个元素是最顶级的元素时，它就是基于布局视口来计算的。</p>\n<p>所以，布局视口是网页布局的基准窗口，在<code>PC</code>浏览器上，布局视口就等于当前浏览器的窗口大小（不包括<code>borders</code> 、<code>margins</code>、滚动条）。</p>\n<p>在移动端，布局视口被赋予一个默认值，大部分为<code>980px</code>，这保证<code>PC</code>的网页可以在手机浏览器上呈现，但是非常小，用户可以手动对网页进行放大。</p>\n<p>我们可以通过调用<code>document.documentElement.clientWidth / clientHeight</code>来获取布局视口大小。</p>\n</li>\n<li><p>视觉视口</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2019/5/17/16ac3a66924ef751?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"视觉视口\">\n视觉视口(<code>visual viewport</code>)：用户通过屏幕真实看到的区域。</p>\n<p>视觉视口默认等于当前浏览器的窗口大小（包括滚动条宽度）。</p>\n<p>当用户对浏览器进行缩放时，不会改变布局视口的大小，所以页面布局是不变的，但是<strong>缩放会改变视觉视口</strong>的大小。</p>\n<p>例如：用户将浏览器窗口放大了<code>200%</code>，这时浏览器窗口中的<code>CSS像素</code>会随着视觉视口的放大而放大，这时一个<code>CSS</code>像素会跨越更多的物理像素。</p>\n<p>所以，布局视口会限制你的<code>CSS</code>布局，而视觉视口决定用户具体能看到什么。</p>\n<p>我们可以通过调用<code>window.innerWidth / innerHeight</code>来获取视觉视口大小。</p>\n</li>\n<li><p>理想视口</p>\n<p>布局视口在移动端展示的效果并不是一个理想的效果，所以理想视口(<code>ideal viewport</code>)就诞生了：网站页面在移动端展示的理想大小 === 设备独立像素</p>\n<p>当页面缩放比例为<code>100%</code>时，<code>CSS像素 = 设备独立像素</code>，<code>理想视口 = 视觉视口</code>。</p>\n<p>我们可以通过调用<code>screen.width / height</code>来获取理想视口大小。</p>\n</li>\n</ol>\n<h1 id=\"meta-viewport\">Meta viewport</h1>\n<meta> 元素表示那些不能由其它HTML元相关元素之一表示的任何元数据信息，它可以告诉浏览器如何解析页面\n\n<p>我们可以借助``元素的<code>viewport</code>来帮助我们设置视口、缩放等，从而让移动端得到更好的展示效果。</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span>  <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;viewport&quot;</span>  <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;width=device-width; initial-scale=1; maximum-scale=1; minimum-scale=1; user-scalable=no;&quot;</span>&gt;</span>\n</code></pre>\n<p><code>device-width</code>就等于理想视口的宽度，所以设置<code>width=device-width</code>就相当于让布局视口等于理想视口。</p>\n<p>由于<code>initial-scale = 理想视口宽度 / 视觉视口宽度</code>，所以我们设置<code>initial-scale=1;</code>就相当于让视觉视口等于理想视口。</p>\n<p>这时，1个<code>CSS</code>像素就等于1个设备独立像素，而且我们也是基于理想视口来进行布局的，所以呈现出来的页面布局在各种设备上都能大致相似。</p>\n<h1 id=\"rem--vw适配\">rem + vw适配</h1>\n<ul>\n<li><p>rem是相对于根元素的字体大小的单位，也就是html的font-size大小，浏览器默认的字体大小是16px，所以默认的1rem=16px，我们可以根据设备宽度动态设置根元素的font-size，使得以rem为单位的元素在不同终端上以相对一致的视觉效果呈现。</p>\n</li>\n<li><p><code>vh、vw</code>分别对应于视觉视口宽度 <code>window.innerHeight</code>和视觉视口高度 <code>window.innerWidth</code></p>\n<p><code>100vh === window.innerHeight</code>，<code>100vw === window.innerWidth</code></p>\n</li>\n</ul>\n<ol>\n<li><p>设置meta标签</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span>  <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;viewport&quot;</span>  <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;width=device-width; initial-scale=1; maximum-scale=1; minimum-scale=1; user-scalable=no;&quot;</span>&gt;</span>\n</code></pre>\n</li>\n<li><p>设置根<code>font-size</code>（对应于750px设计稿）</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">html</span> {\n    <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">13.3333vw</span>\n}\n\n<span class=\"hljs-comment\">/*\n750px = 100vw\n1px = 0.13333vw\n\n假定1rem = 100px\n则1rem = 13.333vw\n*/</span>\n</code></pre>\n</li>\n</ol>\n"}},"__N_SSG":true}