{"pageProps":{"post":{"title":"CSS复习-0","tags":["CSS"],"categories":"2021复习","description":"## flex组合属性\n\n``` css\nflex: 1 1 100px;\n```\n\n是下面三个属性的缩写：\n\n``` css\n/* 指定了flex容器中剩余空间的多少应该分配给项目（flex增长系数） */\nflex-grow: 1;\n/*  flex 元素的收缩规则。flex 元素仅在默认宽度之和大于容器的时候才会发生收缩，其收缩的大小是依据 flex-shrink 的值 */\nflex-","createDate":"2021-05-19 14:07:45","updateDate":"2021-06-30 10:32:57","body":"<h2 id=\"flex组合属性\">flex组合属性</h2>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-attribute\">flex</span>: <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">100px</span>;\n</code></pre>\n<p>是下面三个属性的缩写：</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-comment\">/* 指定了flex容器中剩余空间的多少应该分配给项目（flex增长系数） */</span>\n<span class=\"hljs-attribute\">flex-grow</span>: <span class=\"hljs-number\">1</span>;\n<span class=\"hljs-comment\">/*  flex 元素的收缩规则。flex 元素仅在默认宽度之和大于容器的时候才会发生收缩，其收缩的大小是依据 flex-shrink 的值 */</span>\n<span class=\"hljs-attribute\">flex-shrink</span>: <span class=\"hljs-number\">1</span>;\n<span class=\"hljs-comment\">/* 指定了 flex 元素在主轴方向上的初始大小 */</span>\n<span class=\"hljs-attribute\">flex-basis</span>: <span class=\"hljs-number\">100px</span>;\n</code></pre>\n<p>不同组合所代表的意义：</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-comment\">/* 关键字值 */</span>\n<span class=\"hljs-attribute\">flex</span>: auto;\n<span class=\"hljs-attribute\">flex</span>: initial;\n<span class=\"hljs-attribute\">flex</span>: none;\n\n<span class=\"hljs-comment\">/* 一个值, 无单位数字: flex-grow */</span>\n<span class=\"hljs-attribute\">flex</span>: <span class=\"hljs-number\">2</span>;\n\n<span class=\"hljs-comment\">/* 一个值, width/height: flex-basis */</span>\n<span class=\"hljs-attribute\">flex</span>: <span class=\"hljs-number\">10em</span>;\n<span class=\"hljs-attribute\">flex</span>: <span class=\"hljs-number\">30px</span>;\n<span class=\"hljs-attribute\">flex</span>: min-content;\n\n<span class=\"hljs-comment\">/* 两个值: flex-grow | flex-basis */</span>\n<span class=\"hljs-attribute\">flex</span>: <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">30px</span>;\n\n<span class=\"hljs-comment\">/* 两个值: flex-grow | flex-shrink */</span>\n<span class=\"hljs-attribute\">flex</span>: <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">2</span>;\n\n<span class=\"hljs-comment\">/* 三个值: flex-grow | flex-shrink | flex-basis */</span>\n<span class=\"hljs-attribute\">flex</span>: <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">10%</span>;\n\n<span class=\"hljs-comment\">/*全局属性值 */</span>\n<span class=\"hljs-attribute\">flex</span>: inherit;\n<span class=\"hljs-attribute\">flex</span>: initial;\n<span class=\"hljs-attribute\">flex</span>: unset;\n</code></pre>\n<h2 id=\"media-query\">media query</h2>\n<p><code>&lt;link rel=&quot;stylesheet&quot; media=&quot;screen and (min-width:600px) and (max-width:900px)&quot; href=&quot;style.css&quot; type=&quot;text/css&quot; /&gt; </code></p>\n<p><code>max-width</code>: 屏幕大小;</p>\n<p><code>max-device-width</code>: 分辨率大小</p>\n<h2 id=\"offsetscreenscroll-xxx\">offset/screen/scroll xxx</h2>\n<p><img src=\"https://mrrsblog.oss-cn-shanghai.aliyuncs.com/offset.png\" alt=\"offset/screen/scroll\"></p>\n<h2 id=\"居中\">居中</h2>\n<ul>\n<li><code>grid</code>布局<pre><code class=\"hljs language-css\"><span class=\"hljs-attribute\">display</span>: grid;\nplace-items: center;\n</code></pre>\n</li>\n</ul>\n<h2 id=\"bfc\">BFC</h2>\n<blockquote>\n<p>块格式化上下文（Block Formatting Context，BFC） 是Web页面的可视CSS渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域</p>\n</blockquote>\n<p>通俗解释：</p>\n<ol>\n<li>一个独立的布局环境。BFC内部的元素布局与外部互不影响。</li>\n<li>一个工具。可以通过一些条件触发BFC，从而实现布局上的需求或解决一些问题</li>\n</ol>\n<p>BFC的触发条件：</p>\n<ul>\n<li>根元素<code>&lt;html&gt;&lt;/html&gt;</code></li>\n<li><code>float</code>不为<code>none</code></li>\n<li><code>overflow</code>不为<code>visible</code></li>\n<li><code>display</code>为<code>inline-block</code>、<code>table-cell</code>、<code>table-caption</code>、<code>flex</code>、<code>inline-flex</code></li>\n<li><code>position</code>为<code>absoulte</code>、<code>fixed</code></li>\n</ul>\n<p>BFC的特性：</p>\n<ul>\n<li>属于同一个BFC的两个<strong>相邻</strong>容器的<strong>上下</strong><code>margin</code>会发生重叠</li>\n<li>BFC的高度包括内部的浮动元素</li>\n<li>BFC不会与浮动元素发生重叠</li>\n</ul>\n<p>清除浮动：</p>\n<p>父元素设置<code>overflow: hidden</code>或<code>clear: both</code></p>\n<h2 id=\"link-vs-import\">link vs @import</h2>\n<ul>\n<li><code>link</code>是HTML方式，<code>@import</code>是css方式</li>\n<li><code>link</code>最大限度支持并行下载，<code>@imoprt</code>过多嵌套导致串行下载</li>\n<li><code>link</code>可以通过<code>rel=&quot;alternate stylesheet&quot;</code>指定候选样式</li>\n<li>浏览器对于<code>link</code>的支持早于<code>@import</code></li>\n<li><code>@import</code>必须放在css顶部</li>\n</ul>\n<h2 id=\"flex宽度问题\">flex宽度问题</h2>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;container&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;left&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;right&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\"> \n<span class=\"hljs-selector-class\">.container</span>{ \n    <span class=\"hljs-comment\">/* width: 600px; */</span>\n    <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">400px</span>; \n    <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">300px</span>; <span class=\"hljs-attribute\">display</span>:flex; \n} \n<span class=\"hljs-selector-class\">.left</span>{ \n    <span class=\"hljs-attribute\">flex</span>: <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">300px</span>;\n} \n<span class=\"hljs-selector-class\">.right</span>{ \n    <span class=\"hljs-attribute\">flex</span>: <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">200px</span>;\n} \n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n</code></pre>\n<p><code>.left</code> + <code>.right</code>的宽度已经超过<code>.container</code>的宽度了，所以会发生缩放，<code>flex-grow</code>不起作用，<code>flex-shrink</code>和<code>width</code>(<code>flex-basis</code>)决定具体的大小</p>\n<p>具体的计算公式：</p>\n<pre><code class=\"hljs language-js\">\nitemSkrinkScaledWidth = flex-shrink * width\n\nshrinkRatio = itemSkrinkScaledWidth / totalShrinkScaledWidth\n\nrealWidth = width - shrinkRatio * negativeWidth \n\n<span class=\"hljs-comment\">// itemSkrinkScaledWidth 项目收缩比例宽度，flex-shrink * width</span>\n<span class=\"hljs-comment\">// totalShrinkScaledWidth 总的收缩比例宽度，total(flex-shrink * width)</span>\n<span class=\"hljs-comment\">// shrinkRatio 收缩比例</span>\n<span class=\"hljs-comment\">// negativeWidth 溢出的尺寸</span>\n<span class=\"hljs-comment\">// width 所设置的大小，width或flex-basis</span>\n<span class=\"hljs-comment\">// realWidth 真实大小</span>\n</code></pre>\n<p>所以</p>\n<pre><code class=\"hljs language-js\">leftWidth = <span class=\"hljs-number\">300</span> - (<span class=\"hljs-number\">2</span> * <span class=\"hljs-number\">300</span> / (<span class=\"hljs-number\">2</span> * <span class=\"hljs-number\">300</span> + <span class=\"hljs-number\">1</span> * <span class=\"hljs-number\">200</span>)) * <span class=\"hljs-number\">100</span> = <span class=\"hljs-number\">225</span>\nrightWidth = <span class=\"hljs-number\">200</span> - (<span class=\"hljs-number\">1</span> * <span class=\"hljs-number\">200</span> / (<span class=\"hljs-number\">2</span> * <span class=\"hljs-number\">300</span> + <span class=\"hljs-number\">1</span> * <span class=\"hljs-number\">200</span>)) * <span class=\"hljs-number\">100</span> = <span class=\"hljs-number\">175</span>\n</code></pre>\n<p>注意：经测试，使用<code>min-width</code>设置时上述计算方法失效，大小正常，不发生缩小</p>\n<h2 id=\"css3新特性\">CSS3新特性</h2>\n<ul>\n<li>选择器 <code>:nth-child(x)</code></li>\n<li>样式<code>flex</code> <code>grid</code> <code>filter</code> <code>transform</code> <code>box-sizing</code></li>\n<li>动画<code>animation</code></li>\n<li>颜色<code>rgba</code></li>\n</ul>\n<h2 id=\"清除浮动\">清除浮动</h2>\n<h3 id=\"after--clear-both\">::after + clear: both</h3>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.clear-float</span><span class=\"hljs-selector-pseudo\">::after</span> {\n  <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;020&quot;</span>; \n  <span class=\"hljs-attribute\">display</span>: block; \n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">0</span>; \n  <span class=\"hljs-attribute\">clear</span>: both; \n  <span class=\"hljs-attribute\">visibility</span>: hidden;  \n}\n</code></pre>\n<h3 id=\"overflow不为none\">overflow不为none</h3>\n<h3 id=\"父元素设置浮动\">父元素设置浮动</h3>\n<h2 id=\"匹配前n个子元素及最后n个子元素\">匹配前N个子元素及最后N个子元素</h2>\n<p>匹配前三个<code>:nth-child(-n+3)</code></p>\n<p>匹配最后三个<code>:nth-last-child(-n+4)</code></p>\n<h2 id=\"参考\">参考</h2>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex\">MDN-flex</a></p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context\">MDN-bfc</a></p>\n<p><a href=\"https://www.cnblogs.com/qs-cnblogs/p/12349887.html\">BFC是什么？BFC有什么用？看完全明白</a></p>\n<p><a href=\"https://segmentfault.com/a/1190000010780991\">个人总结（css3新特性）</a></p>\n"}},"__N_SSG":true}