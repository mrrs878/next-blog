{"pageProps":{"post":{"title":"Git学习-修改历史commit","tags":["Git","rebase"],"categories":"Git","description":"有时候我们在提交代码时选错了git账号或者初始化仓库时没有配置git账号，恰好你也忽略掉了git的提示：\n\n``` shell\nYour name and email address were configured automatically based\non your username and hostname. Please check that they are accurate.\nYo","createDate":"2022-04-17 20:42:00","updateDate":"2022-04-17 21:35:28","body":"<p>有时候我们在提交代码时选错了git账号或者初始化仓库时没有配置git账号，恰好你也忽略掉了git的提示：</p>\n<pre><code class=\"hljs language-shell\">Your name and email address were configured automatically based\non your username and hostname. Please check that they are accurate.\nYou can suppress this message by setting them explicitly:\n\n    git config --global user.name &quot;Your Name&quot;\n    git config --global user.email you@example.com\n\nAfter doing this, you may fix the identity used for this commit with:\n\n    git commit --amend --reset-author\n</code></pre>\n<p>在这之后，你可能又进行了几次提交......</p>\n<p>某一时刻你突然意识到好像有什么不对劲🤔</p>\n<p><img src=\"https://mrrsblog.oss-cn-shanghai.aliyuncs.com/shiqingbingbujiandan.jpeg\" alt=\"事情并不简单\"></p>\n<p>慌忙中执行了一下<code>git log</code></p>\n<pre><code class=\"hljs language-shell\">git log\n\ncommit b9955bf47f6437c2d72daf99e809737bbb79f2e1 (HEAD -&gt; master)\nAuthor: echo &lt;echo@echodeMBP.lan&gt;\nDate:   Sun Apr 17 20:49:01 2022 +0800\n\n    fix: fix 1.1\n\ncommit ee0c985a1f158dcfe72b319727f401ae0742ed23\nAuthor: echo &lt;echo@echodeMBP.lan&gt;\nDate:   Sun Apr 17 20:48:44 2022 +0800\n\n    fix: fix 1.0\n\ncommit f6bac54c00f6b869894e8214aae7b8aaacdec5d5\nAuthor: echo &lt;echo@echodeMBP.lan&gt;\nDate:   Sun Apr 17 20:47:23 2022 +0800\n\n    feat: 1.0\n</code></pre>\n<p>寄了🙁</p>\n<p><code>Author</code>全是另一个，假设刚好你的团队是按照 bug数/代码量 来进行代码质量评估的，那现在岂不是自己给自己挖坑，强行拉低分母</p>\n<p><img src=\"https://mrrsblog.oss-cn-shanghai.aliyuncs.com/wtmlaji.jpeg\" alt=\"我tm怎么这么垃圾\"></p>\n<p>稳住别慌，问题不大。git这么牛逼的东西怎么可能没想到我们这种傻瓜操作呢？接下来我会分几种不同的情况分别给出解决方案</p>\n<p>首先，感谢祖师爷！</p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">只修改最后一次提交</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>假如你只是提交了一次就发现不对劲，那么你可以很简单地挽救回来，执行以下命令即可：</p>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\"># </span><span class=\"language-bash\">注意邮箱需包括&lt;&gt;尖括号</span>\ngit commit --amend --author=&quot;NewAuthor &lt;NewEmail@address.com&gt;&quot;\n</code></pre>\n<p>或者在项目目录下配置好git账号后执行：</p>\n<pre><code class=\"hljs language-shell\">git commit --amend --reset-author\n</code></pre>\n<p>此时<code>git log</code>长这样</p>\n<pre><code class=\"hljs language-shell\">git log\n\ncommit 8b7c9afb16d25a89cb2d8c3d864e8422c088966c (HEAD -&gt; master)\nAuthor: mrrs878 &lt;mrrs878@foxmail.com&gt;\nDate:   Sun Apr 17 20:49:01 2022 +0800\n\n    fix: fix 1.1\n\ncommit ee0c985a1f158dcfe72b319727f401ae0742ed23\nAuthor: echo &lt;echo@echodeMBP.lan&gt;\nDate:   Sun Apr 17 20:48:44 2022 +0800\n\n    fix: fix 1.0\n\ncommit f6bac54c00f6b869894e8214aae7b8aaacdec5d5\nAuthor: echo &lt;echo@echodeMBP.lan&gt;\nDate:   Sun Apr 17 20:47:23 2022 +0800\n\n    feat: 1.0\n</code></pre>\n<p>好耶！🎉</p>\n<p>那假如你是提交了好几次才记起来了呢</p>\n<p><img src=\"https://mrrsblog.oss-cn-shanghai.aliyuncs.com/cangtianna.png\" alt=\"苍天呐\"></p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">修改历史提交</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>依旧稳住别慌，问题不大</p>\n<p>此时就要祭出<code>git rebase</code>了</p>\n<p>假如你的<code>git log</code>长这样</p>\n<pre><code class=\"hljs language-shell\">git log\n\ncommit 8b7c9afb16d25a89cb2d8c3d864e8422c088966c (HEAD -&gt; master)\nAuthor: mrrs878 &lt;mrrs878@foxmail.com&gt;\nDate:   Sun Apr 17 20:49:01 2022 +0800\n\n    fix: fix 1.1\n\ncommit ee0c985a1f158dcfe72b319727f401ae0742ed23\nAuthor: echo &lt;echo@echodeMBP.lan&gt;\nDate:   Sun Apr 17 20:48:44 2022 +0800\n\n    fix: fix 1.0\n\ncommit f6bac54c00f6b869894e8214aae7b8aaacdec5d5\nAuthor: echo &lt;echo@echodeMBP.lan&gt;\nDate:   Sun Apr 17 20:47:23 2022 +0800\n\n    feat: 1.0\n</code></pre>\n<p>（没错，我还是拿的上面举例子👆）</p>\n<p>假如你要修复<code>commit message</code>为<code>fix: fix 1.0</code>的这个<code>commit</code>，执行这个命令：</p>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\"># </span><span class=\"language-bash\">-i 后面跟的是fix: fix1.0之前的一个commit的<span class=\"hljs-built_in\">hash</span></span>\ngit rebase -i f6bac54c00f6b869894e8214aae7b8aaacdec5d5\n</code></pre>\n<p>或者这样:</p>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\"># </span><span class=\"language-bash\">HEAD~2 表示后退两步</span>\ngit rebase -i HEAD~2\n</code></pre>\n<p>（推荐直接写hash值，当你的commit落后太多不好计算🤣）</p>\n<p>此时你的终端大概率可能会变成这样：</p>\n<pre><code class=\"hljs language-shell\">echo@echodeMBP  ~/Frontend/test/git-commit-change  ➦ ee0c985 &gt;R&gt; \n</code></pre>\n<p>这两个命令执行的结果都是一样的：</p>\n<pre><code class=\"hljs language-shell\">pick ee0c985 fix: fix 1.0\npick 8b7c9af fix: fix 1.1\n<span class=\"hljs-meta\">\n# </span><span class=\"language-bash\">Rebase f6bac54..8b7c9af onto f6bac54 (2 commands)</span>\n<span class=\"hljs-meta\">#</span><span class=\"language-bash\">\n<span class=\"hljs-comment\"># Commands:</span></span>\n<span class=\"hljs-meta\"># </span><span class=\"language-bash\">p, pick &lt;commit&gt; = use commit</span>\n<span class=\"hljs-meta\"># </span><span class=\"language-bash\">r, reword &lt;commit&gt; = use commit, but edit the commit message</span>\n<span class=\"hljs-meta\"># </span><span class=\"language-bash\">e, edit &lt;commit&gt; = use commit, but stop <span class=\"hljs-keyword\">for</span> amending</span>\n<span class=\"hljs-meta\"># </span><span class=\"language-bash\">s, squash &lt;commit&gt; = use commit, but meld into previous commit</span>\n<span class=\"hljs-meta\"># </span><span class=\"language-bash\">f, fixup [-C | -c] &lt;commit&gt; = like <span class=\"hljs-string\">&quot;squash&quot;</span> but keep only the previous</span>\n<span class=\"hljs-meta\"># </span><span class=\"language-bash\">                   commit<span class=\"hljs-string\">&#x27;s log message, unless -C is used, in which case</span></span>\n<span class=\"hljs-meta\"># </span><span class=\"language-bash\"><span class=\"hljs-string\">                   keep only this commit&#x27;</span>s message; -c is same as -C but</span>\n<span class=\"hljs-meta\"># </span><span class=\"language-bash\">                   opens the editor</span>\n<span class=\"hljs-meta\"># </span><span class=\"language-bash\">x, <span class=\"hljs-built_in\">exec</span> &lt;<span class=\"hljs-built_in\">command</span>&gt; = run <span class=\"hljs-built_in\">command</span> (the rest of the line) using shell</span>\n<span class=\"hljs-meta\"># </span><span class=\"language-bash\">b, <span class=\"hljs-built_in\">break</span> = stop here (<span class=\"hljs-built_in\">continue</span> rebase later with <span class=\"hljs-string\">&#x27;git rebase --continue&#x27;</span>)</span>\n<span class=\"hljs-meta\"># </span><span class=\"language-bash\">d, drop &lt;commit&gt; = remove commit</span>\n<span class=\"hljs-meta\"># </span><span class=\"language-bash\">l, label &lt;label&gt; = label current HEAD with a name</span>\n<span class=\"hljs-meta\"># </span><span class=\"language-bash\">t, reset &lt;label&gt; = reset HEAD to a label</span>\n<span class=\"hljs-meta\"># </span><span class=\"language-bash\">m, merge [-C &lt;commit&gt; | -c &lt;commit&gt;] &lt;label&gt; [<span class=\"hljs-comment\"># &lt;oneline&gt;]</span></span>\n</code></pre>\n<p>此时会进入命令行交互状态</p>\n<p>光标移动到选择你要修改的那个<code>commit</code>，并将前方的<code>pick</code>改为<code>edit</code>，然后<code>:</code> + <code>wq</code>保存退出</p>\n<p>此时终端会打印这个消息</p>\n<pre><code class=\"hljs language-shell\">Stopped at ee0c985...  fix: fix 1.0\nYou can amend the commit now, with\n\n  git commit --amend \n\nOnce you are satisfied with your changes, run\n\n  git rebase --continue\n</code></pre>\n<p>接着执行这个命令：</p>\n<pre><code class=\"hljs language-shell\">git commit --amend --reset-author\n</code></pre>\n<p>或者最上面那个：</p>\n<pre><code class=\"hljs language-shell\">git commit --amend --author=&quot;NewAuthor &lt;NewEmail@address.com&gt;&quot;\n</code></pre>\n<p>此时又会进入命令行交互界面，类似于执行<code>git commit -m &quot;xxxx&quot;</code>时。由于我们什么都没改，因此可以<code>:</code> + <code>wq</code>退出即可</p>\n<p>最后执行：</p>\n<pre><code class=\"hljs language-shell\">git rebase --continue\n</code></pre>\n<p>这时候再<code>git log</code>一下看看效果👀</p>\n<pre><code class=\"hljs language-shell\">commit 24ff96047eeb5531841b1d93242af992b6e54fcc (HEAD -&gt; master)\nAuthor: mrrs878 &lt;mrrs878@foxmail.com&gt;\nDate:   Sun Apr 17 20:49:01 2022 +0800\n\n    fix: fix 1.1\n\ncommit 40074be6073f9f76817665d6de078143dbf6739d\nAuthor: mrrs878 &lt;mrrs878@foxmail.com&gt;\nDate:   Sun Apr 17 21:14:52 2022 +0800\n\n    fix: fix 1.0\n\ncommit f6bac54c00f6b869894e8214aae7b8aaacdec5d5\nAuthor: echo &lt;echo@echodeMBP.lan&gt;\nDate:   Sun Apr 17 20:47:23 2022 +0800\n\n    feat: 1.0\n</code></pre>\n<p>好耶！成功了 🎉</p>\n<p>到这里可以解决大多数的人的问题了，那可能会有人问了，如果我一开始就是错的怎么办呢？</p>\n<p><img src=\"https://mrrsblog.oss-cn-shanghai.aliyuncs.com/male.jpeg\" alt=\"麻了\"></p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">修改第一次提交</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>依旧问题不大，将上面的</p>\n<pre><code class=\"hljs language-shell\">git rebase -i xxx\n</code></pre>\n<p>替换成</p>\n<pre><code class=\"hljs language-shell\">git rebase -i --root\n</code></pre>\n<p>这时你会发现可以修改第一次提交了</p>\n<pre><code class=\"hljs language-shell\">pick f6bac54 feat: 1.0\npick 40074be fix: fix 1.0\npick 24ff960 fix: fix 1.1\n<span class=\"hljs-meta\">\n# </span><span class=\"language-bash\">Rebase 24ff960 onto fba660d (3 commands)</span>\n</code></pre>\n<p>接下来的就不用我教你了吧</p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">总结</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <ul>\n<li><p>如果是最后一次提交错误，可以简单地执行<code>git commit --amend --author=&quot;NewAuthor &lt;NewEmail@address.com&gt;&quot;</code>或<code>git commit --amend --reset-author</code>来修改信息</p>\n</li>\n<li><p>如果是某一次提交错误，可以通过<code>git rebase -i xxx</code> + 第一种的命令来修改信息</p>\n</li>\n<li><p>如果要修改第一次提交，可以将第二种的<code>git rebase -i xxx</code>替换成<code>git rebase -i --root</code>来修改信息</p>\n</li>\n</ul>\n<p>结束！</p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">参考</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p><a href=\"https://www.jianshu.com/p/51f5cbb81cae\">Git修改提交历史中的作者及邮箱信息</a></p>\n<p><a href=\"https://stackoverflow.com/questions/2246208/change-first-commit-of-project-with-git\">Change first commit of project with Git?</a></p>\n"}},"__N_SSG":true}