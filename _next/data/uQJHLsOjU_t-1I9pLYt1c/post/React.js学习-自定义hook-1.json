{"pageProps":{"post":{"title":"React.js学习-自定义hook-1","tags":["React.js学习","hook"],"categories":"React.js","description":"# 自定义hook的好处\n\n可以把组件逻辑抽到**可复用**的方法里\n\n# useRequest\n\n```ts\nfunction useRequest<P, T>(api: (params: P) => Promise<T>, params?: P, visiable = true)\n  :[boolean, T|undefined, (params?: P) => void, () => v","createDate":"2020-09-03 09:23:54","updateDate":"2020-10-20 16:48:58","body":"<h1 id=\"自定义hook的好处\">自定义hook的好处</h1>\n<p>可以把组件逻辑抽到<strong>可复用</strong>的方法里</p>\n<h1 id=\"userequest\">useRequest</h1>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">function</span> useRequest&lt;P, T&gt;(<span class=\"hljs-attr\">api</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">params: P</span>) =&gt;</span> <span class=\"hljs-title class_\">Promise</span>&lt;T&gt;, params?: P, visiable = <span class=\"hljs-literal\">true</span>)\n  :[<span class=\"hljs-built_in\">boolean</span>, T|<span class=\"hljs-literal\">undefined</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">params?: P</span>) =&gt;</span> <span class=\"hljs-built_in\">void</span>, <span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-built_in\">void</span>] {\n  <span class=\"hljs-keyword\">const</span> [res, setRes] = useState&lt;T&gt;();\n  <span class=\"hljs-keyword\">const</span> [loading, setLoading] = <span class=\"hljs-title function_\">useState</span>(<span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-literal\">false</span>);\n  <span class=\"hljs-keyword\">const</span> [newParams, setNewParams] = <span class=\"hljs-title function_\">useState</span>(<span class=\"hljs-function\">() =&gt;</span> params);\n  <span class=\"hljs-keyword\">const</span> [autoFetch, setAutoFetch] = <span class=\"hljs-title function_\">useState</span>(<span class=\"hljs-function\">() =&gt;</span> visiable);\n\n  <span class=\"hljs-keyword\">const</span> fetch = <span class=\"hljs-title function_\">useCallback</span>(<span class=\"hljs-keyword\">async</span> () =&gt; {\n    <span class=\"hljs-keyword\">if</span> (!newParams &amp;&amp; autoFetch === <span class=\"hljs-literal\">false</span>) <span class=\"hljs-keyword\">return</span>;\n    <span class=\"hljs-keyword\">if</span> (autoFetch) {\n      <span class=\"hljs-keyword\">const</span> _params = (newParams || {}) <span class=\"hljs-keyword\">as</span> P;\n      <span class=\"hljs-title function_\">setLoading</span>(<span class=\"hljs-literal\">true</span>);\n      <span class=\"hljs-keyword\">const</span> tmp = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">api</span>(_params);\n      <span class=\"hljs-title function_\">setRes</span>(tmp);\n      <span class=\"hljs-title function_\">setLoading</span>(<span class=\"hljs-literal\">false</span>);\n    }\n  }, [api, autoFetch, newParams]);\n\n  <span class=\"hljs-title function_\">useEffect</span>(<span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-title function_\">fetch</span>();\n  }, [fetch]);\n\n  <span class=\"hljs-keyword\">const</span> doFetch = <span class=\"hljs-title function_\">useCallback</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">rest = <span class=\"hljs-literal\">null</span></span>) =&gt;</span> {\n    <span class=\"hljs-title function_\">setNewParams</span>(rest);\n    <span class=\"hljs-title function_\">setAutoFetch</span>(<span class=\"hljs-literal\">true</span>);\n  }, []);\n\n  <span class=\"hljs-keyword\">return</span> [loading, res, doFetch, fetch];\n}\n</code></pre>\n<h1 id=\"useslider\">useSlider</h1>\n<p>如果使用传统方式开发，UI界面与逻辑强耦合在一起，若要开发一个横向和一个竖向则代码过于冗余。于是可以使用自定义<code>hook-useSlider</code>将滑动逻辑复用</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 传统方式开发</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">React</span>, { useRef, useEffect, useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;react&quot;</span>\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">Slider</span> = (<span class=\"hljs-params\"></span>) =&gt; {\n    <span class=\"hljs-keyword\">const</span> drag = <span class=\"hljs-title function_\">useRef</span>()\n    <span class=\"hljs-keyword\">const</span> [percent, setPercent] = <span class=\"hljs-title function_\">useState</span>(<span class=\"hljs-number\">0</span>)\n\n    <span class=\"hljs-title function_\">useEffect</span>(<span class=\"hljs-function\">() =&gt;</span> {\n        drag.<span class=\"hljs-property\">current</span>.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">left</span> = percent * <span class=\"hljs-number\">300</span> - <span class=\"hljs-number\">12</span> + <span class=\"hljs-string\">&#x27;px&#x27;</span>\n    }, [percent])\n\n    <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">onMouseDown</span>(<span class=\"hljs-params\">e</span>) {\n        e.<span class=\"hljs-title function_\">persist</span>()\n        <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;mousemove&#x27;</span>, onMouseMove)\n        <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;mouseup&#x27;</span>, onMouseUp)\n    }\n    <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">onMouseMove</span>(<span class=\"hljs-params\">e</span>) {\n        <span class=\"hljs-keyword\">if</span> (e.<span class=\"hljs-property\">pageX</span> &lt; <span class=\"hljs-number\">0</span> || e.<span class=\"hljs-property\">pageX</span> &gt; <span class=\"hljs-number\">300</span>) <span class=\"hljs-keyword\">return</span>\n        <span class=\"hljs-title function_\">setPercent</span>((e.<span class=\"hljs-property\">pageX</span> / <span class=\"hljs-number\">300</span>))\n        drag.<span class=\"hljs-property\">current</span>.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">left</span> = e.<span class=\"hljs-property\">pageX</span> - <span class=\"hljs-number\">12</span> + <span class=\"hljs-string\">&#x27;px&#x27;</span>\n    }\n    <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">onMouseUp</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">removeEventListener</span>(<span class=\"hljs-string\">&#x27;mousemove&#x27;</span>, onMouseMove)\n        <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">removeEventListener</span>(<span class=\"hljs-string\">&#x27;mouseup&#x27;</span>, onMouseUp)\n    }\n    <span class=\"hljs-keyword\">return</span> (\n        <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setPercent(0)}&gt;0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setPercent(0.5)}&gt;0.5<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setPercent(1)}&gt;1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span> \n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>{ percent }<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">position:</span> &#x27;<span class=\"hljs-attr\">relative</span>&#x27; }}&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">height:</span> &#x27;<span class=\"hljs-attr\">15px</span>&#x27;, <span class=\"hljs-attr\">width:</span> &#x27;<span class=\"hljs-attr\">300px</span>&#x27;, <span class=\"hljs-attr\">backgroundColor:</span> &#x27;#<span class=\"hljs-attr\">ccc</span>&#x27; }}&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">{drag}</span> <span class=\"hljs-attr\">onMouseDown</span>=<span class=\"hljs-string\">{</span> <span class=\"hljs-attr\">onMouseDown</span> } <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">width:</span> &#x27;<span class=\"hljs-attr\">35px</span>&#x27;, <span class=\"hljs-attr\">height:</span> &#x27;<span class=\"hljs-attr\">35px</span>&#x27;, <span class=\"hljs-attr\">borderRadius:</span> &#x27;<span class=\"hljs-attr\">50</span>%&#x27;, <span class=\"hljs-attr\">position:</span> &#x27;<span class=\"hljs-attr\">absolute</span>&#x27;, <span class=\"hljs-attr\">backgroundColor:</span> &#x27;#<span class=\"hljs-attr\">aaa</span>&#x27;, <span class=\"hljs-attr\">top:</span> &#x27;<span class=\"hljs-attr\">-10px</span>&#x27;, <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">0</span> }}&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n    )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">Slider</span>\n</code></pre>\n<pre><code class=\"hljs language-jsx\"><span class=\"hljs-comment\">// 使用自定义hook开发</span>\n\n<span class=\"hljs-comment\">// slider2.0.js</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">React</span>, { useRef, useEffect, useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;react&quot;</span>\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">useSlider</span> = (<span class=\"hljs-params\">{ dragWidth, slideWidth, direction =<span class=\"hljs-string\">&#x27;horizontal&#x27;</span> }</span>) =&gt; {\n    <span class=\"hljs-keyword\">const</span> drag = <span class=\"hljs-title function_\">useRef</span>()\n    <span class=\"hljs-keyword\">const</span> [percent, setPercent] = <span class=\"hljs-title function_\">useState</span>(<span class=\"hljs-number\">0</span>)\n    <span class=\"hljs-keyword\">const</span> [originPosition, setOriginPosition] = <span class=\"hljs-title function_\">useState</span>(<span class=\"hljs-function\">() =&gt;</span> ({ <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">0</span> ,<span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">0</span> }))\n\n    <span class=\"hljs-title function_\">useEffect</span>(<span class=\"hljs-function\">() =&gt;</span> {\n        <span class=\"hljs-keyword\">if</span> (direction === <span class=\"hljs-string\">&#x27;horizontal&#x27;</span>) drag.<span class=\"hljs-property\">current</span>.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">left</span> = percent * slideWidth - (dragWidth&gt;&gt;<span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">&#x27;px&#x27;</span>\n        <span class=\"hljs-keyword\">else</span> drag.<span class=\"hljs-property\">current</span>.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">top</span> = percent * slideWidth - (dragWidth&gt;&gt;<span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">&#x27;px&#x27;</span>\n    }, [percent])\n\n    <span class=\"hljs-title function_\">useEffect</span>(<span class=\"hljs-function\">() =&gt;</span> {\n        <span class=\"hljs-keyword\">const</span> { left, top } = drag.<span class=\"hljs-property\">current</span>.<span class=\"hljs-title function_\">getBoundingClientRect</span>()\n        <span class=\"hljs-title function_\">setOriginPosition</span>({ <span class=\"hljs-attr\">x</span>: left, <span class=\"hljs-attr\">y</span>: top })\n        <span class=\"hljs-keyword\">return</span> onMouseUp\n    }, [drag])\n    \n    <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">onMouseDown</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;mousemove&#x27;</span>, onMouseMove)\n        <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;mouseup&#x27;</span>, onMouseUp)\n    }\n\n    <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">onMouseMove</span>(<span class=\"hljs-params\">e</span>) {\n        <span class=\"hljs-keyword\">if</span> (direction === <span class=\"hljs-string\">&#x27;horizontal&#x27;</span>) {\n            <span class=\"hljs-keyword\">const</span> pos = e.<span class=\"hljs-property\">pageX</span> - originPosition.<span class=\"hljs-property\">x</span> - (dragWidth&gt;&gt;<span class=\"hljs-number\">1</span>)\n            <span class=\"hljs-keyword\">if</span> (pos &lt; <span class=\"hljs-number\">0</span> || pos &gt; slideWidth) <span class=\"hljs-keyword\">return</span>\n            <span class=\"hljs-title function_\">setPercent</span>(pos / slideWidth)\n            drag.<span class=\"hljs-property\">current</span>.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">left</span> = pos - (dragWidth&gt;&gt;<span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">&#x27;px&#x27;</span>\n        } <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-keyword\">const</span> pos = e.<span class=\"hljs-property\">pageY</span> - originPosition.<span class=\"hljs-property\">y</span> - (dragWidth&gt;&gt;<span class=\"hljs-number\">1</span>)\n            <span class=\"hljs-keyword\">if</span> (pos &lt; <span class=\"hljs-number\">0</span> || pos &gt; slideWidth) <span class=\"hljs-keyword\">return</span>\n            <span class=\"hljs-title function_\">setPercent</span>(pos / slideWidth)\n            drag.<span class=\"hljs-property\">current</span>.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">top</span> = pos - (dragWidth&gt;&gt;<span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">&#x27;px&#x27;</span>\n        }\n    }\n    <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">onMouseUp</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">removeEventListener</span>(<span class=\"hljs-string\">&#x27;mousemove&#x27;</span>, onMouseMove)\n        <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">removeEventListener</span>(<span class=\"hljs-string\">&#x27;mouseup&#x27;</span>, onMouseUp)\n    }\n\n    <span class=\"hljs-keyword\">return</span> [\n        drag,\n        percent,\n        onMouseDown,\n        setPercent\n    ]\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">Slider</span> = (<span class=\"hljs-params\"></span>) =&gt; {\n    <span class=\"hljs-keyword\">const</span> [ dragH, percentH, onDragMouseDownH, setPercentH ] = <span class=\"hljs-title function_\">useSlider</span>({ <span class=\"hljs-attr\">dragWidth</span>: <span class=\"hljs-number\">35</span>, <span class=\"hljs-attr\">slideWidth</span>: <span class=\"hljs-number\">300</span> })\n    <span class=\"hljs-keyword\">const</span> [ dragV, percentV, onDragMouseDownV, setPercentV ] = <span class=\"hljs-title function_\">useSlider</span>({ <span class=\"hljs-attr\">dragWidth</span>: <span class=\"hljs-number\">35</span>, <span class=\"hljs-attr\">slideWidth</span>: <span class=\"hljs-number\">300</span>, <span class=\"hljs-attr\">direction</span>: <span class=\"hljs-string\">&#x27;vertical&#x27;</span> })\n    <span class=\"hljs-keyword\">return</span> (\n        <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n        {/* 可以分别创建一个SliderV.js和SliderH.js */}\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">marginLeft:</span> &#x27;<span class=\"hljs-attr\">20px</span>&#x27; }}&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>横向<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>            \n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setPercentH(0)}&gt;0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setPercentH(0.5)}&gt;0.5<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setPercentH(1)}&gt;1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span> \n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>{ percentH }<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">position:</span> &#x27;<span class=\"hljs-attr\">relative</span>&#x27; }}&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">height:</span> &#x27;<span class=\"hljs-attr\">15px</span>&#x27;, <span class=\"hljs-attr\">width:</span> &#x27;<span class=\"hljs-attr\">300px</span>&#x27;, <span class=\"hljs-attr\">backgroundColor:</span> &#x27;#<span class=\"hljs-attr\">ccc</span>&#x27; }}&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">width:</span> `${<span class=\"hljs-attr\">percentH</span> * <span class=\"hljs-attr\">300</span>}<span class=\"hljs-attr\">px</span>`, <span class=\"hljs-attr\">height:</span> &#x27;<span class=\"hljs-attr\">15px</span>&#x27;, <span class=\"hljs-attr\">position:</span> &#x27;<span class=\"hljs-attr\">absolute</span>&#x27;, <span class=\"hljs-attr\">top:</span> &#x27;<span class=\"hljs-attr\">0</span>&#x27;, <span class=\"hljs-attr\">backgroundColor:</span> &#x27;#<span class=\"hljs-attr\">f00</span>&#x27; }}&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">{dragH}</span> <span class=\"hljs-attr\">onMouseDown</span>=<span class=\"hljs-string\">{onDragMouseDownH}</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">width:</span> &#x27;<span class=\"hljs-attr\">35px</span>&#x27;, <span class=\"hljs-attr\">height:</span> &#x27;<span class=\"hljs-attr\">35px</span>&#x27;, <span class=\"hljs-attr\">borderRadius:</span> &#x27;<span class=\"hljs-attr\">50</span>%&#x27;, <span class=\"hljs-attr\">position:</span> &#x27;<span class=\"hljs-attr\">absolute</span>&#x27;, <span class=\"hljs-attr\">backgroundColor:</span> &#x27;#<span class=\"hljs-attr\">aaa</span>&#x27;, <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">0</span>, <span class=\"hljs-attr\">top:</span> &#x27;<span class=\"hljs-attr\">-10px</span>&#x27; }}&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">marginLeft:</span> &#x27;<span class=\"hljs-attr\">20px</span>&#x27; }}&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>竖向<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>            \n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setPercentV(0)}&gt;0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setPercentV(0.5)}&gt;0.5<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> setPercentV(1)}&gt;1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span> \n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>{ percentV }<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">position:</span> &#x27;<span class=\"hljs-attr\">relative</span>&#x27; }}&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">height:</span> &#x27;<span class=\"hljs-attr\">300px</span>&#x27;, <span class=\"hljs-attr\">width:</span> &#x27;<span class=\"hljs-attr\">15px</span>&#x27;, <span class=\"hljs-attr\">backgroundColor:</span> &#x27;#<span class=\"hljs-attr\">ccc</span>&#x27; }}&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">height:</span> `${<span class=\"hljs-attr\">percentV</span> * <span class=\"hljs-attr\">300</span>}<span class=\"hljs-attr\">px</span>`, <span class=\"hljs-attr\">width:</span> &#x27;<span class=\"hljs-attr\">15px</span>&#x27;, <span class=\"hljs-attr\">position:</span> &#x27;<span class=\"hljs-attr\">absolute</span>&#x27;, <span class=\"hljs-attr\">left:</span> &#x27;<span class=\"hljs-attr\">0</span>&#x27;, <span class=\"hljs-attr\">top:</span> &#x27;<span class=\"hljs-attr\">0</span>&#x27;, <span class=\"hljs-attr\">backgroundColor:</span> &#x27;#<span class=\"hljs-attr\">f00</span>&#x27; }}&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">{dragV}</span> <span class=\"hljs-attr\">onMouseDown</span>=<span class=\"hljs-string\">{onDragMouseDownV}</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">width:</span> &#x27;<span class=\"hljs-attr\">35px</span>&#x27;, <span class=\"hljs-attr\">height:</span> &#x27;<span class=\"hljs-attr\">35px</span>&#x27;, <span class=\"hljs-attr\">borderRadius:</span> &#x27;<span class=\"hljs-attr\">50</span>%&#x27;, <span class=\"hljs-attr\">position:</span> &#x27;<span class=\"hljs-attr\">absolute</span>&#x27;, <span class=\"hljs-attr\">backgroundColor:</span> &#x27;#<span class=\"hljs-attr\">aaa</span>&#x27;, <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">0</span>, <span class=\"hljs-attr\">left:</span> &#x27;<span class=\"hljs-attr\">-10px</span>&#x27; }}&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n    )\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">Slider</span>\n</code></pre>\n<h1 id=\"ref\">Ref:</h1>\n<p><a href=\"https://juejin.im/post/6844904021984018439\">React Hook 系列（二）：自定义hook的一些实践</a></p>\n"}},"__N_SSG":true}