{"pageProps":{"post":{"title":"JavaScript复习-垃圾回收","tags":["JavaScript"],"categories":"2021复习","description":"## GC做了什么：\n\n1. 找到内存空间中的垃圾\n2. 回收垃圾，让程序能再次利用这部分空间\n\n## 常用的几种GC算法\n\n### 引用计数法\n\n记录对象有多少程序在引用它，当引用计数为0时就会被回收\n\n优势：\n\n- 可即刻回收垃圾，当引用计数为0时，对象马上会把自己作为空闲空间连到空闲链表上。也就是说在变成垃圾的时候就立刻被回收\n- `GC`效果短、平、快\n\n劣势：\n\n- 计数器可能会占用","createDate":"2021-05-10 11:25:34","updateDate":"2021-06-10 18:38:58","body":"<h2 id=\"gc做了什么：\">GC做了什么：</h2>\n<ol>\n<li>找到内存空间中的垃圾</li>\n<li>回收垃圾，让程序能再次利用这部分空间</li>\n</ol>\n<h2 id=\"常用的几种gc算法\">常用的几种GC算法</h2>\n<h3 id=\"引用计数法\">引用计数法</h3>\n<p>记录对象有多少程序在引用它，当引用计数为0时就会被回收</p>\n<p>优势：</p>\n<ul>\n<li>可即刻回收垃圾，当引用计数为0时，对象马上会把自己作为空闲空间连到空闲链表上。也就是说在变成垃圾的时候就立刻被回收</li>\n<li><code>GC</code>效果短、平、快</li>\n</ul>\n<p>劣势：</p>\n<ul>\n<li>计数器可能会占用很大的空间</li>\n<li>无法解决循环引用无法被回收的问题</li>\n</ul>\n<h3 id=\"标记清除法👍\">标记清除法👍</h3>\n<p>将<code>GC</code>过程分为两个阶段：</p>\n<ul>\n<li>标记阶段：把所有活动对象做上标记</li>\n<li>清除阶段：把所有没有被标记的对象销毁</li>\n</ul>\n<p>优势：</p>\n<ul>\n<li>实现简单</li>\n<li>可以解决循环引用的问题</li>\n</ul>\n<p>劣势：</p>\n<ul>\n<li>造成碎片化</li>\n<li>不能实时回收（采用定时任务定时<code>GC</code>）</li>\n</ul>\n<h3 id=\"复制算法\">复制算法</h3>\n<p>将一个内存空间分为两部分，一部分是From空间，另一部分是To空间，将From空间里面的活动对象复制到To空间，然后释放掉整个From空间，然后此刻将From空间和To空间的身份互换，那么就完成了一次GC。</p>\n<p><img src=\"https://mrrsblog.oss-cn-shanghai.aliyuncs.com/copy_gc.png\" alt=\"复制算法GC\"></p>\n"}},"__N_SSG":true}