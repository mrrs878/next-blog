{"pageProps":{"post":{"title":"Python-BeautifulSoup","tags":["Python","BeautifulSoup"],"categories":"Python","description":"# Python-BeautifulSoup的使用\nBeautiSoup，是借助网页的结构和属性等特性来解析网页的工具，有了它我们不用再去写一些复杂的正则，只需要简单的几条语句就可以完成网页中某个元素的提取。\n## BeautifulSoup简介\n官方解释如下：\nBeautifulSoup提供一些简单的、Python式的函数用来处理导航、搜索、修改分析树等功能。它是一个工具箱，通过解析文档为用户","createDate":"2018-11-16 14:50:41","updateDate":"2021-02-20 17:20:24","body":"<h1 id=\"python-beautifulsoup的使用\">Python-BeautifulSoup的使用</h1>\n<p>BeautiSoup，是借助网页的结构和属性等特性来解析网页的工具，有了它我们不用再去写一些复杂的正则，只需要简单的几条语句就可以完成网页中某个元素的提取。</p>\n<h2 id=\"beautifulsoup简介\">BeautifulSoup简介</h2>\n<p>官方解释如下：\nBeautifulSoup提供一些简单的、Python式的函数用来处理导航、搜索、修改分析树等功能。它是一个工具箱，通过解析文档为用户提供需要抓取的数据，因为简单，所以不需要多少代码就可以写出一个完整的应用程序。 BeautifulSoup 自动将输入文档转换为 Unicode 编码，输出文档转换为 utf-8 编码。你不需要考虑编码方式，除非文档没有指定一个编码方式，这时你仅仅需要说明一下原始编码方式就可以了。 BeautifulSoup 已成为和 lxml、html6lib 一样出色的 Python 解释器，为用户灵活地提供不同的解析策略或强劲的速度。</p>\n<h2 id=\"解析器\">解析器</h2>\n<p>BeautifulSoup 在解析的时候实际上是依赖于解析器的，它除了支持 Python 标准库中的 HTML 解析器，还支持一些第三方的解析器比如 LXML，下面我们对 BeautifulSoup 支持的解析器及它们的一些优缺点做一个简单的对比。\n<img src=\"https://t1.picb.cc/uploads/2018/11/16/JXuhZc.png\" alt=\"enter image description here\"></p>\n<h2 id=\"基本使用\">基本使用</h2>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">from</span> bs4 <span class=\"hljs-keyword\">import</span> BeautifulSoup\n\nhtml = <span class=\"hljs-string\">&#x27;&#x27;&#x27;\n&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;&lt;/head&gt;\n&lt;body&gt;\n&lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;\n&lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were\n&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,\n&lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and\n&lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;\nand they lived at the bottom of a well.&lt;/p&gt;\n&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;\n&#x27;&#x27;&#x27;</span>\n\nsoup = BeautifulSoup(html, <span class=\"hljs-string\">&#x27;lxml&#x27;</span>) \n<span class=\"hljs-built_in\">print</span>(soup.prettify())  <span class=\"hljs-comment\"># 把要解析的字符串以标准的缩进格式输出(自动更正格式)</span>\n<span class=\"hljs-built_in\">print</span>(soup.title.string)\n\n\n<span class=\"hljs-comment\"># 输出</span>\n&lt;html&gt;\n &lt;head&gt;\n  &lt;title&gt;\n   The Dormouse<span class=\"hljs-string\">&#x27;s story\n  &lt;/title&gt;\n &lt;/head&gt;\n &lt;body&gt;\n  &lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;\n   &lt;b&gt;\n    The Dormouse&#x27;</span>s story\n   &lt;/b&gt;\n  &lt;/p&gt;\n  &lt;p <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;story&quot;</span>&gt;\n   Once upon a time there were three little sisters; <span class=\"hljs-keyword\">and</span> their names were\n   &lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/elsie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link1&quot;</span>&gt;\n    &lt;!-- Elsie --&gt;\n   &lt;/a&gt;\n   ,\n   &lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/lacie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link2&quot;</span>&gt;\n    Lacie\n   &lt;/a&gt;\n   <span class=\"hljs-keyword\">and</span>\n   &lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/tillie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link3&quot;</span>&gt;\n    Tillie\n   &lt;/a&gt;\n   ;\n<span class=\"hljs-keyword\">and</span> they lived at the bottom of a well.\n  &lt;/p&gt;\n  &lt;p <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;story&quot;</span>&gt;\n   ...\n  &lt;/p&gt;\n &lt;/body&gt;\n&lt;/html&gt;\nThe Dormouse<span class=\"hljs-string\">&#x27;s story</span>\n</code></pre>\n<h2 id=\"节点选择器\">节点选择器</h2>\n<h3 id=\"选择元素\">选择元素</h3>\n<pre><code class=\"hljs language-python\">soup = BeautifulSoup(html, <span class=\"hljs-string\">&#x27;lxml&#x27;</span>)\n<span class=\"hljs-built_in\">print</span>(soup.title)\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-built_in\">type</span>(soup.title.string))\n<span class=\"hljs-built_in\">print</span>(soup.title.string)\n<span class=\"hljs-built_in\">print</span>(soup.head)\n<span class=\"hljs-built_in\">print</span>(soup.p)  <span class=\"hljs-comment\"># 只选择第一个出现的p标签</span>\n\n\n<span class=\"hljs-comment\"># 输出</span>\n&lt;title&gt;The Dormouse<span class=\"hljs-string\">&#x27;s story&lt;/title&gt;\n&lt;class &#x27;</span>bs4.element.NavigableString<span class=\"hljs-string\">&#x27;&gt;\nThe Dormouse&#x27;</span>s story\n&lt;head&gt;&lt;title&gt;The Dormouse<span class=\"hljs-string\">&#x27;s story&lt;/title&gt;&lt;/head&gt;\n&lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#x27;</span>s story&lt;/b&gt;&lt;/p&gt;\n</code></pre>\n<h2 id=\"提取信息\">提取信息</h2>\n<h4 id=\"获取名称\">获取名称</h4>\n<p>可以利用 name 属性来获取节点的名称。还是以上面的文本为例，我们选取 title 节点，然后调用 name 属性就可以得到节点名称。</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-built_in\">print</span>(soup.title.name)\n\n<span class=\"hljs-comment\"># 输出</span>\ntitle\n</code></pre>\n<h4 id=\"获取属性\">获取属性</h4>\n<p>每个节点可能有多个属性，比如 id，class 等等，我们选择到这个节点元素之后，可以调用 attrs 获取所有属性。</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-built_in\">print</span>(soup.p.attrs)\n<span class=\"hljs-built_in\">print</span>(soup.p.attrs[<span class=\"hljs-string\">&#x27;name&#x27;</span>])\n<span class=\"hljs-comment\">#更加简便的写法</span>\n<span class=\"hljs-built_in\">print</span>(soup.p[<span class=\"hljs-string\">&#x27;name&#x27;</span>])\n<span class=\"hljs-built_in\">print</span>(soup.p[<span class=\"hljs-string\">&#x27;class&#x27;</span>])\n\n<span class=\"hljs-comment\"># 输出</span>\n{<span class=\"hljs-string\">&#x27;class&#x27;</span>: [<span class=\"hljs-string\">&#x27;title&#x27;</span>], <span class=\"hljs-string\">&#x27;name&#x27;</span>: <span class=\"hljs-string\">&#x27;dromouse&#x27;</span>}\ndromouse\ndromouse\n[<span class=\"hljs-string\">&#x27;title&#x27;</span>]\n</code></pre>\n<h4 id=\"获取内容\">获取内容</h4>\n<p>可以利用 string 属性获取节点元素包含的文本内容。</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-built_in\">print</span>(soup.p.string)\n\n<span class=\"hljs-comment\"># 输出</span>\nThe Dormouse<span class=\"hljs-string\">&#x27;s story</span>\n</code></pre>\n<h3 id=\"嵌套选择\">嵌套选择</h3>\n<p>在上面的例子中我们知道每一个返回结果都是 bs4.element.Tag 类型，它同样可以继续调用节点进行下一步的选择，比如我们获取了 head 节点元素，我们可以继续调用 head 来选取其内部的 head 节点元素。</p>\n<pre><code class=\"hljs language-python\">html = <span class=\"hljs-string\">&quot;&quot;&quot;\n&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;&lt;/head&gt;\n&lt;body&gt;\n&quot;&quot;&quot;</span>\n\n<span class=\"hljs-keyword\">from</span> bs4 <span class=\"hljs-keyword\">import</span> BeautifulSoup\nsoup = BeautifulSoup(html, <span class=\"hljs-string\">&#x27;lxml&#x27;</span>)\n<span class=\"hljs-built_in\">print</span>(soup.head.title)\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-built_in\">type</span>(soup.head.title))\n<span class=\"hljs-built_in\">print</span>(soup.head.title.string)\n\n\n<span class=\"hljs-comment\"># 输出</span>\n&lt;title&gt;The Dormouse<span class=\"hljs-string\">&#x27;s story&lt;/title&gt;\n&lt;class &#x27;</span>bs4.element.Tag<span class=\"hljs-string\">&#x27;&gt;\nThe Dormouse&#x27;</span>s story\n</code></pre>\n<h3 id=\"关联选择\">关联选择</h3>\n<p>我们在做选择的时候有时候不能做到一步就可以选择到想要的节点元素，有时候在选择的时候需要先选中某一个节点元素，然后以它为基准再选择它的子节点、父节点、兄弟节点等等。</p>\n<h4 id=\"子节点和子孙节点\">子节点和子孙节点</h4>\n<p>选取到了一个节点元素之后，如果想要获取它的<strong>直接子节点</strong>可以调用 contents 属性。 contents 返回的是列表类型， children 返回的是生成器类型。</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-built_in\">print</span>(soup.p.contents)\n<span class=\"hljs-built_in\">print</span>(soup.p.children)\n<span class=\"hljs-built_in\">print</span>(soup.p.contents)\n\n<span class=\"hljs-built_in\">print</span>(soup.p.children)\n<span class=\"hljs-keyword\">for</span> i, child <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">enumerate</span>(soup.p.children):\n    <span class=\"hljs-built_in\">print</span>(i, child)\n\n\n<span class=\"hljs-comment\"># 输出</span>\n[<span class=\"hljs-string\">&#x27;Once upon a time there were three little sisters; and their names were\\n&#x27;</span>, &lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/elsie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link1&quot;</span>&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;, <span class=\"hljs-string\">&#x27;,\\n&#x27;</span>, &lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/lacie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link2&quot;</span>&gt;Lacie&lt;/a&gt;, <span class=\"hljs-string\">&#x27; and\\n&#x27;</span>, &lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/tillie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link3&quot;</span>&gt;Tillie&lt;/a&gt;, <span class=\"hljs-string\">&#x27;;\\nand they lived at the bottom of a well.&#x27;</span>]\n\n<span class=\"hljs-number\">0</span> Once upon a time there were three little sisters; <span class=\"hljs-keyword\">and</span> their names were\n\n<span class=\"hljs-number\">1</span> &lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/elsie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link1&quot;</span>&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;\n<span class=\"hljs-number\">2</span> ,\n\n<span class=\"hljs-number\">3</span> &lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/lacie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link2&quot;</span>&gt;Lacie&lt;/a&gt;\n<span class=\"hljs-number\">4</span>  <span class=\"hljs-keyword\">and</span>\n\n<span class=\"hljs-number\">5</span> &lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/tillie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link3&quot;</span>&gt;Tillie&lt;/a&gt;\n<span class=\"hljs-number\">6</span> ;\n<span class=\"hljs-keyword\">and</span> they lived at the bottom of a well.\n</code></pre>\n<h4 id=\"父节点和祖先节点\">父节点和祖先节点</h4>\n<p>如果要获取某个节点元素的直接父节点，可以调用 parent 属性，要想获取所有的祖先节点，可以调用 parents 。</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-built_in\">print</span>(soup.a.parent)\n<span class=\"hljs-built_in\">print</span>(soup.a.parents)\n\n<span class=\"hljs-comment\"># 输出</span>\n&lt;p <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;story&quot;</span>&gt;Once upon a time there were three little sisters; <span class=\"hljs-keyword\">and</span> their names were\n&lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/elsie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link1&quot;</span>&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,\n&lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/lacie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link2&quot;</span>&gt;Lacie&lt;/a&gt; <span class=\"hljs-keyword\">and</span>\n&lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/tillie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link3&quot;</span>&gt;Tillie&lt;/a&gt;;\n<span class=\"hljs-keyword\">and</span> they lived at the bottom of a well.&lt;/p&gt;\n\n[(<span class=\"hljs-number\">0</span>, &lt;p <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;story&quot;</span>&gt;Once upon a time there were three little sisters; <span class=\"hljs-keyword\">and</span> their names were\n&lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/elsie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link1&quot;</span>&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,\n&lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/lacie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link2&quot;</span>&gt;Lacie&lt;/a&gt; <span class=\"hljs-keyword\">and</span>\n&lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/tillie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link3&quot;</span>&gt;Tillie&lt;/a&gt;;\n<span class=\"hljs-keyword\">and</span> they lived at the bottom of a well.&lt;/p&gt;), (<span class=\"hljs-number\">1</span>, &lt;body&gt;\n&lt;p <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;story&quot;</span>&gt;Once upon a time there were three little sisters; <span class=\"hljs-keyword\">and</span> their names were\n&lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/elsie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link1&quot;</span>&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,\n&lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/lacie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link2&quot;</span>&gt;Lacie&lt;/a&gt; <span class=\"hljs-keyword\">and</span>\n&lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/tillie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link3&quot;</span>&gt;Tillie&lt;/a&gt;;\n<span class=\"hljs-keyword\">and</span> they lived at the bottom of a well.&lt;/p&gt;\n&lt;p <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;story&quot;</span>&gt;...&lt;/p&gt;\n&lt;/body&gt;), (<span class=\"hljs-number\">2</span>, &lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse<span class=\"hljs-string\">&#x27;s story&lt;/title&gt;&lt;/head&gt;\n&lt;body&gt;\n&lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were\n&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,\n&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and\n&lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;\nand they lived at the bottom of a well.&lt;/p&gt;\n&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;\n&lt;/body&gt;&lt;/html&gt;), (3, &lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#x27;</span>s story&lt;/title&gt;&lt;/head&gt;\n&lt;body&gt;\n&lt;p <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;story&quot;</span>&gt;Once upon a time there were three little sisters; <span class=\"hljs-keyword\">and</span> their names were\n&lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/elsie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link1&quot;</span>&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,\n&lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/lacie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link2&quot;</span>&gt;Lacie&lt;/a&gt; <span class=\"hljs-keyword\">and</span>\n&lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/tillie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link3&quot;</span>&gt;Tillie&lt;/a&gt;;\n<span class=\"hljs-keyword\">and</span> they lived at the bottom of a well.&lt;/p&gt;\n&lt;p <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;story&quot;</span>&gt;...&lt;/p&gt;\n&lt;/body&gt;&lt;/html&gt;)]\n</code></pre>\n<h4 id=\"兄弟节点\">兄弟节点</h4>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">from</span> bs4 <span class=\"hljs-keyword\">import</span> BeautifulSoup\nhtml = <span class=\"hljs-string\">&quot;&quot;&quot;\n&lt;html&gt;\n    &lt;body&gt;\n        &lt;p class=&quot;story&quot;&gt;\n            Once upon a time there were three little sisters; and their names were\n            &lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;\n                &lt;span&gt;Elsie&lt;/span&gt;\n            &lt;/a&gt;\n            Hello\n            &lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; \n            and\n            &lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;\n            and they lived at the bottom of a well.\n        &lt;/p&gt;\n&quot;&quot;&quot;</span>\nsoup = BeautifulSoup(html, <span class=\"hljs-string\">&#x27;lxml&#x27;</span>)\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;next_sibling&#x27;</span>, soup.a.next_sibling)\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;prev_sibling&#x27;</span>, soup.a.previous_sibling)\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;next_siblings&#x27;</span>, <span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">enumerate</span>(soup.a.next_sibling)))\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;prev_siblings&#x27;</span>, <span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">enumerate</span>(soup.a.previous_sibling)))\n\n\n<span class=\"hljs-comment\"># 输出</span>\nnext_sibling \n            Hello\n            \nprev_sibling \n            Once upon a time there were three little sisters; <span class=\"hljs-keyword\">and</span> their names were\n            \nnext_siblings [(<span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">&#x27;\\n            Hello\\n            &#x27;</span>), (<span class=\"hljs-number\">1</span>, &lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/lacie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link2&quot;</span>&gt;Lacie&lt;/a&gt;), (<span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">&#x27; \\n            and\\n            &#x27;</span>), (<span class=\"hljs-number\">3</span>, &lt;a <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;sister&quot;</span> href=<span class=\"hljs-string\">&quot;http://example.com/tillie&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;link3&quot;</span>&gt;Tillie&lt;/a&gt;), (<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">&#x27;\\n            and they lived at the bottom of a well.\\n        &#x27;</span>)]\nprev_siblings [(<span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">&#x27;\\n            Once upon a time there were three little sisters; and their names were\\n            &#x27;</span>)]\n</code></pre>\n<h2 id=\"方法选择器\">方法选择器</h2>\n<p>前面讲的选择方法都是通过属性来选择元素的，这种选择方法非常快，但是如果要进行比较复杂的选择的话则会比较繁琐，不够灵活。所以 BeautifulSoup 还提供了一些查询的方法，比如 find_all()、find() 等方法，我们可以调用方法然后传入相应等参数就可以灵活地进行查询。</p>\n<h3 id=\"find_all--查找所有符合条件的元素\">find_all--查找所有符合条件的元素</h3>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">from</span> bs4 <span class=\"hljs-keyword\">import</span> BeautifulSoup\nhtml=<span class=\"hljs-string\">&#x27;&#x27;&#x27;\n&lt;div class=&quot;panel&quot;&gt;\n    &lt;div class=&quot;panel-heading&quot;&gt;\n        &lt;h4&gt;Hello&lt;/h4&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;panel-body&quot;&gt;\n        &lt;ul class=&quot;list&quot; id=&quot;list-1&quot;&gt;\n            &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;\n            &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;\n            &lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;\n        &lt;/ul&gt;\n        &lt;ul class=&quot;list list-small&quot; id=&quot;list-2&quot;&gt;\n            &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;\n            &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n&#x27;&#x27;&#x27;</span>\nsoup = BeautifulSoup(html, <span class=\"hljs-string\">&#x27;lxml&#x27;</span>)\n<span class=\"hljs-built_in\">print</span>(soup.find_all(name = <span class=\"hljs-string\">&#x27;ul&#x27;</span>))\n<span class=\"hljs-keyword\">for</span> ul <span class=\"hljs-keyword\">in</span> soup.find_all(name = <span class=\"hljs-string\">&#x27;ul&#x27;</span>):\n    <span class=\"hljs-built_in\">print</span>(ul.find_all(name = <span class=\"hljs-string\">&#x27;li&#x27;</span>))\n    <span class=\"hljs-keyword\">for</span> li <span class=\"hljs-keyword\">in</span> ul.find_all(name = <span class=\"hljs-string\">&#x27;li&#x27;</span>):\n        <span class=\"hljs-built_in\">print</span>(li.string)\n\n<span class=\"hljs-comment\"># 输出</span>\n[&lt;ul <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;list&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;list-1&quot;</span>&gt;\n&lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Foo&lt;/li&gt;\n&lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Bar&lt;/li&gt;\n&lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Jay&lt;/li&gt;\n&lt;/ul&gt;, &lt;ul <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;list list-small&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;list-2&quot;</span>&gt;\n&lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Foo&lt;/li&gt;\n&lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Bar&lt;/li&gt;\n&lt;/ul&gt;]\n[&lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Foo&lt;/li&gt;, &lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Bar&lt;/li&gt;, &lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Jay&lt;/li&gt;]\nFoo\nBar\nJay\n[&lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Foo&lt;/li&gt;, &lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Bar&lt;/li&gt;]\nFoo\nBar\n</code></pre>\n<h3 id=\"attrs\">attrs</h3>\n<p>根据属性进行查询</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-built_in\">print</span>(soup.find_all(attrs = {<span class=\"hljs-string\">&#x27;id&#x27;</span>: <span class=\"hljs-string\">&#x27;list-1&#x27;</span>}))\n\n<span class=\"hljs-comment\"># 输出</span>\n[&lt;ul <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;list&quot;</span> <span class=\"hljs-built_in\">id</span>=<span class=\"hljs-string\">&quot;list-1&quot;</span>&gt;\n&lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Foo&lt;/li&gt;\n&lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Bar&lt;/li&gt;\n&lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Jay&lt;/li&gt;\n&lt;/ul&gt;]\n</code></pre>\n<h3 id=\"text\">text</h3>\n<p>text 参数可以用来匹配节点的文本，传入的形式可以是字符串，可以是正则表达式对象。</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import</span> re\nhtml=<span class=\"hljs-string\">&#x27;&#x27;&#x27;\n&lt;div class=&quot;panel&quot;&gt;\n    &lt;div class=&quot;panel-body&quot;&gt;\n        &lt;a&gt;Hello, this is a link&lt;/a&gt;\n        &lt;a&gt;Hello, this is a link, too&lt;/a&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n&#x27;&#x27;&#x27;</span>\n<span class=\"hljs-keyword\">from</span> bs4 <span class=\"hljs-keyword\">import</span> BeautifulSoup\nsoup = BeautifulSoup(html, <span class=\"hljs-string\">&#x27;lxml&#x27;</span>)\n<span class=\"hljs-built_in\">print</span>(soup.find_all(text=re.<span class=\"hljs-built_in\">compile</span>(<span class=\"hljs-string\">&#x27;link&#x27;</span>)))\n\n<span class=\"hljs-comment\"># 输出</span>\n[<span class=\"hljs-string\">&#x27;Hello, this is a link&#x27;</span>, <span class=\"hljs-string\">&#x27;Hello, this is a link, too&#x27;</span>]\n</code></pre>\n<h3 id=\"find\">find()</h3>\n<p>find方法和find_all类似，只是返回的是第一个匹配的元素</p>\n<h3 id=\"othres-api\">othres API</h3>\n<ul>\n<li><p>find_parents() find_parent()\nfind_parents() 返回所有祖先节点，find_parent() 返回直接父节点。</p>\n</li>\n<li><p>find_next_siblings() find_next_sibling()\nfind_next_siblings() 返回后面所有兄弟节点，find_next_sibling() 返回后面第一个兄弟节点。</p>\n</li>\n<li><p>find_previous_siblings() find_previous_sibling()\nfind_previous_siblings() 返回前面所有兄弟节点，find_previous_sibling() 返回前面第一个兄弟节点。</p>\n</li>\n<li><p>find_all_next() find_next()\nfind_all_next() 返回节点后所有符合条件的节点, find_next() 返回第一个符合条件的节点。</p>\n</li>\n<li><p>find_all_previous() 和 find_previous()\nfind_all_previous() 返回节点后所有符合条件的节点, find_previous() 返回第一个符合条件的节点</p>\n</li>\n</ul>\n<h2 id=\"css选择器\">CSS选择器</h2>\n<p>BeautifulSoup 还提供了另外一种选择器，那就是 CSS 选择器。使用 CSS 选择器，只需要调用 select() 方法，传入相应的 CSS 选择器即可。</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">from</span> bs4 <span class=\"hljs-keyword\">import</span> BeautifulSoup\nhtml=<span class=\"hljs-string\">&#x27;&#x27;&#x27;\n&lt;div class=&quot;panel&quot;&gt;\n    &lt;div class=&quot;panel-heading&quot;&gt;\n        &lt;h4&gt;Hello&lt;/h4&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;panel-body&quot;&gt;\n        &lt;ul class=&quot;list&quot; id=&quot;list-1&quot;&gt;\n            &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;\n            &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;\n            &lt;li class=&quot;element&quot;&gt;Jay&lt;/li&gt;\n        &lt;/ul&gt;\n        &lt;ul class=&quot;list list-small&quot; id=&quot;list-2&quot;&gt;\n            &lt;li class=&quot;element&quot;&gt;Foo&lt;/li&gt;\n            &lt;li class=&quot;element&quot;&gt;Bar&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n&#x27;&#x27;&#x27;</span>\nsoup = BeautifulSoup(html, <span class=\"hljs-string\">&#x27;lxml&#x27;</span>)\n<span class=\"hljs-built_in\">print</span>(soup.select(<span class=\"hljs-string\">&#x27;.panel .panel-heading&#x27;</span>))\n<span class=\"hljs-built_in\">print</span>(soup.select(<span class=\"hljs-string\">&#x27;ul li&#x27;</span>))\n<span class=\"hljs-built_in\">print</span>(soup.select(<span class=\"hljs-string\">&#x27;#list-2 .element&#x27;</span>))\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-built_in\">type</span>(soup.select(<span class=\"hljs-string\">&#x27;ul&#x27;</span>)[<span class=\"hljs-number\">0</span>]))\n\n\n<span class=\"hljs-comment\"># 输出</span>\n[&lt;div <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;panel-heading&quot;</span>&gt;\n&lt;h4&gt;Hello&lt;/h4&gt;\n&lt;/div&gt;]\n[&lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Foo&lt;/li&gt;, &lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Bar&lt;/li&gt;, &lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Jay&lt;/li&gt;, &lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Foo&lt;/li&gt;, &lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Bar&lt;/li&gt;]\n[&lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Foo&lt;/li&gt;, &lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Bar&lt;/li&gt;]\n&lt;<span class=\"hljs-keyword\">class</span> <span class=\"hljs-string\">&#x27;bs4.element.Tag&#x27;</span>&gt;\n</code></pre>\n<h3 id=\"嵌套选择-1\">嵌套选择</h3>\n<p>select() 方法同样支持嵌套选择，例如我们先选择所有 ul 节点，再遍历每个 ul 节点选择其 li 节点。</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">for</span> ul <span class=\"hljs-keyword\">in</span> soup.select(<span class=\"hljs-string\">&#x27;ul&#x27;</span>):\n    <span class=\"hljs-built_in\">print</span>(ul.select(<span class=\"hljs-string\">&#x27;li&#x27;</span>))\n\n<span class=\"hljs-comment\"># 输出</span>\n[&lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Foo&lt;/li&gt;, &lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Bar&lt;/li&gt;, &lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Jay&lt;/li&gt;]\n[&lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Foo&lt;/li&gt;, &lt;li <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;element&quot;</span>&gt;Bar&lt;/li&gt;]\n</code></pre>\n<h3 id=\"获取属性-1\">获取属性</h3>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">for</span> ul <span class=\"hljs-keyword\">in</span> soup.select(<span class=\"hljs-string\">&#x27;ul&#x27;</span>):\n    <span class=\"hljs-built_in\">print</span>(ul[<span class=\"hljs-string\">&#x27;id&#x27;</span>])\n    <span class=\"hljs-built_in\">print</span>(ul.attrs[<span class=\"hljs-string\">&#x27;id&#x27;</span>])\n\n<span class=\"hljs-comment\"># 输出</span>\n<span class=\"hljs-built_in\">list</span>-<span class=\"hljs-number\">1</span>\n<span class=\"hljs-built_in\">list</span>-<span class=\"hljs-number\">1</span>\n<span class=\"hljs-built_in\">list</span>-<span class=\"hljs-number\">2</span>\n<span class=\"hljs-built_in\">list</span>-<span class=\"hljs-number\">2</span>\n</code></pre>\n<h3 id=\"获取文本\">获取文本</h3>\n<p>获取文本可以用前面所讲的 string 属性，还有一个方法那就是 get_text()。</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">for</span> li <span class=\"hljs-keyword\">in</span> soup.select(<span class=\"hljs-string\">&#x27;li&#x27;</span>):\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;Get Text:&#x27;</span>, li.get_text())\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;String:&#x27;</span>, li.string)\n\n<span class=\"hljs-comment\"># 输出</span>\nGet Text: Foo\nString: Foo\nGet Text: Bar\nString: Bar\nGet Text: Jay\nString: Jay\nGet Text: Foo\nString: Foo\nGet Text: Bar\nString: Bar\n</code></pre>\n"}},"__N_SSG":true}