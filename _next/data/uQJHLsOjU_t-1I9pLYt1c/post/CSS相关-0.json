{"pageProps":{"post":{"title":"CSS相关-0","tags":["CSS"],"categories":"CSS","description":"## 盒模型\n\n描述了元素如何显示，以及（在一定程度上）如何相互作用、相互影响。页面中的所有元素都被看作为一个矩形盒子，这个盒子包含元素的内容、内边距、边框、外边距。\n\n盒模型分为两种：\n\n- 标准盒模型（box-sizing = content-box）\n\n  width = content-width\n\n  height = content-height\n\n- IE盒模型（box-sizi","createDate":"2020-03-24 23:29:35","updateDate":"10/1/2021, 3:34:43 AM","body":"<h2 id=\"盒模型\">盒模型</h2>\n<p>描述了元素如何显示，以及（在一定程度上）如何相互作用、相互影响。页面中的所有元素都被看作为一个矩形盒子，这个盒子包含元素的内容、内边距、边框、外边距。</p>\n<p>盒模型分为两种：</p>\n<ul>\n<li><p>标准盒模型（box-sizing = content-box）</p>\n<p>width = content-width</p>\n<p>height = content-height</p>\n</li>\n<li><p>IE盒模型（box-sizing = border-box）</p>\n<p>width = content-width + padding + border</p>\n<p>height = content-height + padding + border</p>\n</li>\n</ul>\n<h2 id=\"层叠上下文\">层叠上下文</h2>\n<p>层叠上下文是<strong>包含一组图层的元素</strong>。 在一组层叠上下文中，其子元素的<strong>z-index值是相对于该父元素</strong>而不是 <code>document root</code> 设置的。每个层叠上下文完全独立于它的兄弟元素。如果元素 B 位于元素 A 之上，则即使元素 A 的子元素 C 具有比元素 B 更高的<code>z-index</code>值，元素 C 也永远不会在元素 B 之上.</p>\n<p>CSS 中的<code>z-index</code>属性控制重叠元素的垂直叠加顺序。<code>z-index</code>只能影响<code>position</code>值不是<code>static</code>的元素。</p>\n<p>产生层叠上下文：</p>\n<ol>\n<li><p>HTML中的根元素<code>&lt;html&gt;&lt;/html&gt;</code>本身就具有层叠上下文，称为<strong>根层叠上下文</strong>。</p>\n</li>\n<li><p>普通元素设置<code>position</code>属性为<strong>非</strong><code>static</code>值并设置<code>z-index</code>属性为具体数值，产生层叠上下文。</p>\n</li>\n<li><p>CSS3中的新属性也可以产生层叠上下文。</p>\n</li>\n<li><ul>\n<li>父元素的display属性值为<code>flex|inline-flex</code>，子元素<code>z-index</code>属性值不为<code>auto</code>的时候，子元素为层叠上下文元素；</li>\n<li>元素的<code>opacity</code>属性值不是1；</li>\n<li>元素的<code>transform</code>属性值不是<code>none</code>；</li>\n<li>元素<code>mix-blend-mode</code>属性值不是normal；</li>\n<li>元素的<code>filter</code>属性值不是<code>none</code>；</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"https://mrrsblog.oss-cn-shanghai.aliyuncs.com/z-index.png\" alt=\"z-index\"></p>\n<h2 id=\"link标签的rel属性\">link标签的rel属性</h2>\n<ul>\n<li><p><code>preload</code></p>\n<p>让你在你的HTML页面中<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/head\">head</a>标签内部书写一些声明式的资源获取请求，可以指明哪些资源是在页面加载完成后即刻需要的。对于这种即刻需要的资源，你可能希望在页面加载的生命周期的早期阶段就开始获取，在浏览器的主渲染机制介入前就进行预加载。这一机制使得资源可以更早的得到加载并可用，且更不易阻塞页面的初步渲染，进而提升性能。</p>\n</li>\n<li><p><code>prefetch</code></p>\n<p>提示浏览器，用户未来的浏览有可能需要加载目标资源，所以浏览器有可能通过事先获取和缓存对应资源，优化用户体验。</p>\n</li>\n</ul>\n"}},"__N_SSG":true}