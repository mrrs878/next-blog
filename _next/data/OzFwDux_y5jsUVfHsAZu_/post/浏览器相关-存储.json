{"pageProps":{"post":{"title":"浏览器相关-存储","tags":["浏览器存储"],"categories":"浏览器","description":"关于存储的问题都会涉及到三个问题:\n\n1. 存储场所\n2. 存储空间\n3. 存储时间\n\n(在哪儿存储，多少数据，到什么时候)这些特性决定了不同方案的用途\n\n## cookie\n\n- WHAT\n\n  **Cookie指某些网站为了辨别用户身份而储存在用户本地终端上的数据(通常经过加密)。 cookie是服务端生成，客户端进行维护和存储**。通过cookie,可以让服务器知道请求是来源哪个客户端，","createDate":"2020-04-02 22:49:39","updateDate":"10/1/2021, 3:34:43 AM","body":"<p>关于存储的问题都会涉及到三个问题:</p>\n<ol>\n<li>存储场所</li>\n<li>存储空间</li>\n<li>存储时间</li>\n</ol>\n<p>(在哪儿存储，多少数据，到什么时候)这些特性决定了不同方案的用途</p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">cookie</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <ul>\n<li><p>WHAT</p>\n<p><strong>Cookie指某些网站为了辨别用户身份而储存在用户本地终端上的数据(通常经过加密)。 cookie是服务端生成，客户端进行维护和存储</strong>。通过cookie,可以让服务器知道请求是来源哪个客户端，就可以进行客户端状态的维护，比如登陆后刷新，请求头就会携带登陆时response header中的set-cookie,Web服务器接到请求时也能读出cookie的值，根据cookie值的内容就可以判断和恢复一些用户的信息状态。</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2019/3/21/1699f22b7029ca14?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"cookie的原理\"></p>\n</li>\n<li><p>WHY</p>\n<p>cookie的本职工作并非进行本地存储，而是<strong>维持状态</strong>。因为HTTP协议是无状态的，HTTP协议自身不对请求和响应之间的通信状态进行保存，通俗来说，服务器不知道用户上一次做了什么，这严重阻碍了<strong>交互式Web程序</strong>的实现，于是就诞生了cookie。他就是用来绕开HTTP的无状态性的“额外手段”之一。服务器可以设置或读取cookie中包含信息，借此维护用户跟服务器会话的状态</p>\n<p>cookie的缺陷：</p>\n<ul>\n<li>cookie不够大，各浏览器的cookie每一个<code>name=value</code>的value值大概在4k，所以4k并不是一个域名下所有的cookie共享的,而是一个name的大小。</li>\n<li>过多的 Cookie 会带来巨大的性能浪费，每次请求都会携带cookie</li>\n<li>安全性较差，由于在HTTP请求中的Cookie是明文传递的，所以安全性成问题，除非用HTTPS</li>\n</ul>\n</li>\n<li><p>HOW</p>\n<p>第一次访问网站的时候，浏览器发出请求，服务器响应请求后，会在响应头里面添加一个Set-Cookie选项，将cookie放入到响应请求中，在浏览器第二次发请求的时候，会通过Cookie请求头部将Cookie信息发送给服务器，服务端会辨别用户身份，另外，Cookie的过期时间、域、路径、有效期、适用站点都可以根据需要来指定。</p>\n<p>cookie的生成方式主要有两种：</p>\n<ol>\n<li><p><code>http response header</code>中的<code>set-cookie</code></p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title class_\">Set</span>-<span class=\"hljs-title class_\">Cookie</span>: id=a3fWa; <span class=\"hljs-title class_\">Expires</span>=<span class=\"hljs-title class_\">Wed</span>, <span class=\"hljs-number\">21</span> <span class=\"hljs-title class_\">Oct</span> <span class=\"hljs-number\">2019</span> <span class=\"hljs-number\">22</span>:<span class=\"hljs-number\">28</span>:<span class=\"hljs-number\">00</span> <span class=\"hljs-variable constant_\">GMT</span>;<span class=\"hljs-comment\">//可以指定一个特定的过期时间（Expires）或有效期（Max-Age）</span>\n</code></pre>\n</li>\n<li><p>js中通过<code>document.cookie</code>可以读写cookie，以键值对的形式展示</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">cookie</span> = <span class=\"hljs-string\">&quot;userName=mrrs878&quot;</span>\n<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">cookie</span> = <span class=\"hljs-string\">&quot;age=23&quot;</span>\n</code></pre>\n</li>\n</ol>\n<p>常用后缀及其含义：</p>\n<p>| 属性      | 作用                                                         |\n|</p>\n</li>\n</ul>\n"}},"__N_SSG":true}