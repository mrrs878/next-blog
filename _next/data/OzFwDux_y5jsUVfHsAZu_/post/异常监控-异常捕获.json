{"pageProps":{"post":{"title":"异常监控-异常捕获","tags":["异常监控"],"categories":"前端架构&软实力","description":"## 异常分类\n\n- 编译时异常/运行时异常\n\n**着重处理运行时异常**\n\n## 要处理的异常\n\n- js运行时异常\n- 静态资源加载异常\n- Promise异常\n- ajax请求异常\n- 崩溃和卡顿\n\n## 捕获异常\n\n### 普通前端项目\n\n```js\n// monitor.ts\n\ninterface ConfigI {\n  reportUrl: string;\n}\n\ninterface","createDate":"2020-07-28 11:15:28","updateDate":"2021-02-20 17:14:19","body":"\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">异常分类</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <ul>\n<li>编译时异常/运行时异常</li>\n</ul>\n<p><strong>着重处理运行时异常</strong></p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">要处理的异常</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <ul>\n<li>js运行时异常</li>\n<li>静态资源加载异常</li>\n<li>Promise异常</li>\n<li>ajax请求异常</li>\n<li>崩溃和卡顿</li>\n</ul>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">捕获异常</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    \n      <h3>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">普通前端项目</span>\n        <span class=\"suffix\"></span>\n      </h3>\n    <pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// monitor.ts</span>\n\ninterface <span class=\"hljs-title class_\">ConfigI</span> {\n  <span class=\"hljs-attr\">reportUrl</span>: string;\n}\n\ninterface <span class=\"hljs-title class_\">BaseinfoI</span> {\n  <span class=\"hljs-attr\">title</span>: string;\n  <span class=\"hljs-attr\">location</span>: string;\n  <span class=\"hljs-attr\">message</span>: string;\n  <span class=\"hljs-attr\">kind</span>: string;\n  <span class=\"hljs-attr\">type</span>: string;\n  <span class=\"hljs-attr\">errorType</span>: string;\n}\n\ninterface <span class=\"hljs-title class_\">JSRunTimeErrorEventI</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">BaseinfoI</span> {\n  <span class=\"hljs-attr\">filename</span>: string;\n  <span class=\"hljs-attr\">position</span>: string;\n  <span class=\"hljs-attr\">stack</span>: string;\n  <span class=\"hljs-attr\">selector</span>: string;\n}\n\ninterface <span class=\"hljs-title class_\">AssetsErrorI</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">BaseinfoI</span> {\n  <span class=\"hljs-attr\">url</span>: string;\n  <span class=\"hljs-attr\">nodeName</span>: string;\n}\n\ninterface <span class=\"hljs-title class_\">AjaxErrorEventI</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">BaseinfoI</span> {\n  <span class=\"hljs-attr\">response</span>: string;\n  <span class=\"hljs-attr\">status</span>: number;\n  <span class=\"hljs-attr\">method</span>: string;\n  <span class=\"hljs-attr\">url</span>: string;\n}\n\ninterface <span class=\"hljs-title class_\">PromiseErrorI</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">BaseinfoI</span> {\n  <span class=\"hljs-attr\">message</span>: string;\n  <span class=\"hljs-attr\">stack</span>: string;\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">config</span>: <span class=\"hljs-title class_\">ConfigI</span> = { <span class=\"hljs-attr\">reportUrl</span>: <span class=\"hljs-string\">&#x27;/&#x27;</span> };\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getLastEvent</span>(<span class=\"hljs-params\"></span>): <span class=\"hljs-literal\">undefined</span> | <span class=\"hljs-title class_\">Event</span> {\n  <span class=\"hljs-keyword\">let</span> lastEvent;\n  [<span class=\"hljs-string\">&#x27;click&#x27;</span>, <span class=\"hljs-string\">&#x27;touchstart&#x27;</span>, <span class=\"hljs-string\">&#x27;mousedown&#x27;</span>, <span class=\"hljs-string\">&#x27;keydown&#x27;</span>, <span class=\"hljs-string\">&#x27;mouseover&#x27;</span>].<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">eventType</span>) =&gt;</span> <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">addEventListener</span>(eventType, <span class=\"hljs-function\">(<span class=\"hljs-params\">event</span>) =&gt;</span> {\n    lastEvent = event;\n  }, {\n    <span class=\"hljs-attr\">capture</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">passive</span>: <span class=\"hljs-literal\">true</span>,\n  }));\n  <span class=\"hljs-keyword\">return</span> lastEvent;\n}\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getSelector</span>(<span class=\"hljs-params\">path: <span class=\"hljs-built_in\">Array</span>&lt;EventTarget&gt;</span>) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;&#x27;</span>;\n}\n\n<span class=\"hljs-keyword\">function</span> report&lt;T&gt;(<span class=\"hljs-attr\">data</span>: { <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;JSRunTimeErrorI&#x27;</span> | <span class=\"hljs-string\">&#x27;PromiseErrorT&#x27;</span> | <span class=\"hljs-string\">&#x27;AssetsErrorI&#x27;</span> | <span class=\"hljs-string\">&#x27;AjaxErrorEventI&#x27;</span>; <span class=\"hljs-attr\">info</span>: T }) {\n  <span class=\"hljs-keyword\">const</span> image = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Image</span>();\n  image.<span class=\"hljs-property\">src</span> = <span class=\"hljs-string\">`<span class=\"hljs-subst\">${config.reportUrl}</span>?error=<span class=\"hljs-subst\">${<span class=\"hljs-built_in\">JSON</span>.stringify(data.info)}</span>`</span>;\n}\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getCommonInfoFromEvent</span>(<span class=\"hljs-params\">event?: Event</span>) {\n  <span class=\"hljs-keyword\">return</span> {\n    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">title</span>.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/&amp;/</span>, <span class=\"hljs-string\">&#x27;&#x27;</span>),\n    <span class=\"hljs-attr\">location</span>: <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">location</span>.<span class=\"hljs-property\">href</span>.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/&amp;/</span>, <span class=\"hljs-string\">&#x27;&#x27;</span>),\n    <span class=\"hljs-attr\">kind</span>: <span class=\"hljs-string\">&#x27;stability&#x27;</span>,\n    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;error&#x27;</span>,\n  };\n}\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getLines</span>(<span class=\"hljs-params\">stack: string | <span class=\"hljs-literal\">undefined</span></span>) {\n  <span class=\"hljs-keyword\">return</span> stack?.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&#x27;\\n&#x27;</span>).<span class=\"hljs-title function_\">slice</span>(<span class=\"hljs-number\">1</span>).<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">item</span>) =&gt;</span> item.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/^\\s+at\\s+/g</span>, <span class=\"hljs-string\">&#x27;&#x27;</span>)).<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>) || <span class=\"hljs-string\">&#x27;&#x27;</span>;\n}\n\n<span class=\"hljs-comment\">// Promise异常</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">promiseError</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;unhandledrejection&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">event: PromiseRejectionEvent</span>) =&gt;</span> {\n    event.<span class=\"hljs-title function_\">preventDefault</span>();\n    <span class=\"hljs-keyword\">let</span> message = <span class=\"hljs-string\">&#x27;&#x27;</span>;\n    <span class=\"hljs-keyword\">let</span> stack = <span class=\"hljs-string\">&#x27;&#x27;</span>;\n    message = event.<span class=\"hljs-property\">reason</span>;\n    <span class=\"hljs-keyword\">const</span> { reason } = event;\n    <span class=\"hljs-keyword\">if</span> (reason <span class=\"hljs-keyword\">instanceof</span> <span class=\"hljs-title class_\">Error</span>) {\n      message = reason.<span class=\"hljs-property\">message</span>;\n      stack = <span class=\"hljs-title function_\">getLines</span>(reason.<span class=\"hljs-property\">stack</span>);\n    }\n\n    report&lt;<span class=\"hljs-title class_\">PromiseErrorI</span>&gt;({ <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;PromiseErrorT&#x27;</span>, <span class=\"hljs-attr\">info</span>: { <span class=\"hljs-attr\">errorType</span>: event.<span class=\"hljs-property\">type</span>, message, stack, ...<span class=\"hljs-title function_\">getCommonInfoFromEvent</span>() } });\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n  }, <span class=\"hljs-literal\">true</span>);\n}\n\n<span class=\"hljs-comment\">// 静态资源加载异常&amp;JSRuntime异常</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">assetsError</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;error&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">event: ErrorEvent</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> { target } = event;\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(event);\n    <span class=\"hljs-keyword\">const</span> isElementTarget = target <span class=\"hljs-keyword\">instanceof</span> <span class=\"hljs-title class_\">HTMLScriptElement</span> || target <span class=\"hljs-keyword\">instanceof</span> <span class=\"hljs-title class_\">HTMLLinkElement</span> || target <span class=\"hljs-keyword\">instanceof</span> <span class=\"hljs-title class_\">HTMLImageElement</span>;\n    <span class=\"hljs-keyword\">if</span> (!isElementTarget) {\n      <span class=\"hljs-keyword\">const</span> { message, filename, lineno, colno, error, type } = event;\n      <span class=\"hljs-keyword\">const</span> position = <span class=\"hljs-string\">`<span class=\"hljs-subst\">${lineno}</span>:<span class=\"hljs-subst\">${colno}</span>`</span>;\n      <span class=\"hljs-keyword\">const</span> stack = <span class=\"hljs-title function_\">getLines</span>(error <span class=\"hljs-keyword\">instanceof</span> <span class=\"hljs-title class_\">Error</span> ? error.<span class=\"hljs-property\">stack</span> : <span class=\"hljs-string\">&#x27;&#x27;</span>);\n      <span class=\"hljs-keyword\">const</span> lastEvent = <span class=\"hljs-title function_\">getLastEvent</span>();\n      <span class=\"hljs-keyword\">const</span> selector = lastEvent ? <span class=\"hljs-title function_\">getSelector</span>(lastEvent.<span class=\"hljs-title function_\">composedPath</span>()) : <span class=\"hljs-string\">&#x27;&#x27;</span>;\n      report&lt;<span class=\"hljs-title class_\">JSRunTimeErrorEventI</span>&gt;({\n        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;JSRunTimeErrorI&#x27;</span>,\n        <span class=\"hljs-attr\">info</span>: { ...<span class=\"hljs-title function_\">getCommonInfoFromEvent</span>(), message, <span class=\"hljs-attr\">errorType</span>: type, filename, position, stack, selector },\n      });\n    } <span class=\"hljs-keyword\">else</span> {\n      <span class=\"hljs-keyword\">let</span> url = <span class=\"hljs-string\">&#x27;&#x27;</span>;\n      <span class=\"hljs-keyword\">let</span> nodeName = <span class=\"hljs-string\">&#x27;&#x27;</span>;\n      <span class=\"hljs-keyword\">if</span> (target <span class=\"hljs-keyword\">instanceof</span> <span class=\"hljs-title class_\">HTMLImageElement</span> || target <span class=\"hljs-keyword\">instanceof</span> <span class=\"hljs-title class_\">HTMLScriptElement</span>) {\n        url = target.<span class=\"hljs-property\">src</span>;\n        nodeName = target.<span class=\"hljs-property\">nodeName</span>;\n      }\n      <span class=\"hljs-keyword\">if</span> (target <span class=\"hljs-keyword\">instanceof</span> <span class=\"hljs-title class_\">HTMLLinkElement</span>) {\n        url = target.<span class=\"hljs-property\">href</span>;\n        nodeName = target.<span class=\"hljs-property\">nodeName</span>;\n      }\n\n      report&lt;<span class=\"hljs-title class_\">AssetsErrorI</span>&gt;({ <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;AssetsErrorI&#x27;</span>,\n        <span class=\"hljs-attr\">info</span>: {\n          url,\n          <span class=\"hljs-attr\">errorType</span>: event.<span class=\"hljs-property\">type</span>,\n          nodeName,\n          <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;&#x27;</span>,\n          ...<span class=\"hljs-title function_\">getCommonInfoFromEvent</span>() } });\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n  }, <span class=\"hljs-literal\">true</span>);\n}\n\n<span class=\"hljs-comment\">// ajax请求异常</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">ajaxError</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">const</span> { protocol } = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">location</span>;\n  <span class=\"hljs-keyword\">if</span> (protocol === <span class=\"hljs-string\">&#x27;file:&#x27;</span>) <span class=\"hljs-keyword\">return</span>;\n  <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">XMLHttpRequest</span>) <span class=\"hljs-keyword\">return</span>;\n  <span class=\"hljs-keyword\">const</span> xmlReq = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">XMLHttpRequest</span>;\n  <span class=\"hljs-keyword\">const</span> oldSend = xmlReq.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>.<span class=\"hljs-property\">send</span>;\n  <span class=\"hljs-keyword\">const</span> oldOpen = xmlReq.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>.<span class=\"hljs-property\">open</span>;\n  <span class=\"hljs-keyword\">const</span> oldArgs = { <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;&#x27;</span>, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">&#x27;&#x27;</span> };\n  <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">handleEvent</span>(<span class=\"hljs-params\">event: any</span>) {\n    <span class=\"hljs-keyword\">try</span> {\n      <span class=\"hljs-keyword\">if</span> (event &amp;&amp; event.<span class=\"hljs-property\">currentTarget</span> &amp;&amp; event.<span class=\"hljs-property\">currentTarget</span>.<span class=\"hljs-property\">status</span> !== <span class=\"hljs-number\">200</span>) {\n        <span class=\"hljs-keyword\">const</span> { response, status, statusText } = event.<span class=\"hljs-property\">currentTarget</span>;\n        <span class=\"hljs-keyword\">const</span> { method, url } = oldArgs;\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(event);\n\n        report&lt;<span class=\"hljs-title class_\">AjaxErrorEventI</span>&gt;({\n          <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;AjaxErrorEventI&#x27;</span>,\n          <span class=\"hljs-attr\">info</span>: {\n            <span class=\"hljs-attr\">response</span>: <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(response),\n            status,\n            method,\n            url,\n            <span class=\"hljs-attr\">message</span>: statusText,\n            <span class=\"hljs-attr\">errorType</span>: event.<span class=\"hljs-property\">type</span>,\n            ...<span class=\"hljs-title function_\">getCommonInfoFromEvent</span>(),\n          },\n        });\n      }\n    } <span class=\"hljs-keyword\">catch</span> (e) {\n      <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Tool&#x27;s error: <span class=\"hljs-subst\">${e}</span>`</span>);\n    }\n  }\n  xmlReq.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>.<span class=\"hljs-property\">send</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">...args</span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;error&#x27;</span>, handleEvent);\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;load&#x27;</span>, handleEvent);\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;abort&#x27;</span>, handleEvent);\n    <span class=\"hljs-keyword\">return</span> oldSend.<span class=\"hljs-title function_\">apply</span>(<span class=\"hljs-variable language_\">this</span>, args);\n  };\n  xmlReq.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>.<span class=\"hljs-property\">open</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">...args: any</span>) {\n    <span class=\"hljs-keyword\">const</span> [method, url] = args;\n    <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">assign</span>(oldArgs, { method, url });\n    oldOpen.<span class=\"hljs-title function_\">apply</span>(<span class=\"hljs-variable language_\">this</span>, args);\n  };\n}\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">init</span>(<span class=\"hljs-params\">_config: ConfigI</span>) {\n  <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">assign</span>(config, _config);\n  <span class=\"hljs-title function_\">promiseError</span>();\n  <span class=\"hljs-title function_\">assetsError</span>();\n  <span class=\"hljs-title function_\">ajaxError</span>();\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> init;\n</code></pre>\n\n      <h3>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">基于Vue.js的项目</span>\n        <span class=\"suffix\"></span>\n      </h3>\n    <p>针对于Vue.js项目，虽然官方提供有<code>Vue.config.errorHandler</code>来拦截内部错误(生命周期、事件绑定等)。但处理能力有限，无法处理js运行时异步异常(如setTimeout)和资源加载异常等，因此需要使用<code>mointor.js</code> + <code>Vue.config.errorHandler</code>来共同处理</p>\n\n      <h3>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">基于React.js的项目</span>\n        <span class=\"suffix\"></span>\n      </h3>\n    <ol>\n<li><p>引入<code>monitor.ts</code></p>\n</li>\n<li><p>添加<code>MErrorBoundary</code>组件用户出现异常后优雅降级显示和收集出错组件</p>\n</li>\n</ol>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">React</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;react&#x27;</span>;\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MErrorBoundary</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">React.Component</span>&lt;<span class=\"hljs-built_in\">any</span>, <span class=\"hljs-built_in\">any</span>&gt; {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\">props: <span class=\"hljs-built_in\">any</span></span>) {\n    <span class=\"hljs-variable language_\">super</span>(props);\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">state</span> = { <span class=\"hljs-attr\">hasError</span>: <span class=\"hljs-literal\">false</span> };\n  }\n\n  <span class=\"hljs-keyword\">static</span> <span class=\"hljs-title function_\">getDerivedStateFromError</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;MErrorBoundary&#x27;</span>);\n    <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">hasError</span>: <span class=\"hljs-literal\">true</span> };\n  }\n\n  <span class=\"hljs-title function_\">componentDidCatch</span>(<span class=\"hljs-params\">error: <span class=\"hljs-built_in\">any</span>, errorInfo: <span class=\"hljs-built_in\">any</span></span>) {\n    <span class=\"hljs-comment\">// logErrorToMyService(error, errorInfo);</span>\n  }\n\n  <span class=\"hljs-title function_\">render</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">state</span>.<span class=\"hljs-property\">hasError</span>) {\n      <span class=\"hljs-keyword\">return</span> (\n        <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>Something went wrong.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n      );\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">props</span>.<span class=\"hljs-property\">children</span>;\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">MErrorBoundary</span>;\n</code></pre>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">白屏和卡顿</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>// todo</p>\n"}},"__N_SSG":true}