{"pageProps":{"post":{"title":"前端架构&软实力-前端拾遗","tags":["前端拾遗"],"categories":"前端架构&软实力","description":"## dom事件机制\n\n事件触发后有三个阶段\n\n1. 事件捕获阶段\n2. 命中目标（触发入口）\n3. 事件冒泡阶段\n\n![dom 事件机制](https://mrrsblog.oss-cn-shanghai.aliyuncs.com/20160928221704676.png)\n\n## flex每行两个元素\n\n``` css\n.container {\n\tdisplay: flex;\n  \tfl","createDate":"2021-01-04 14:58:02","updateDate":"2021-05-09 10:51:11","body":"\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">dom事件机制</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>事件触发后有三个阶段</p>\n<ol>\n<li>事件捕获阶段</li>\n<li>命中目标（触发入口）</li>\n<li>事件冒泡阶段</li>\n</ol>\n<p><img src=\"https://mrrsblog.oss-cn-shanghai.aliyuncs.com/20160928221704676.png\" alt=\"dom 事件机制\"></p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">flex每行两个元素</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.container</span> {\n    <span class=\"hljs-attribute\">display</span>: flex;\n      <span class=\"hljs-attribute\">flex-wrap</span>: wrap;\n}\n\n<span class=\"hljs-selector-class\">.item</span> {\n    <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">50%</span>;\n}\n</code></pre>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">event对象中 target和currentTarget 属性的区别</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <ul>\n<li>event.target返回触发事件的元素</li>\n<li>event.currentTarget返回绑定事件的元素</li>\n</ul>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">clearTimeout</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p><code>clearTimeout(tid)</code>只是将<code>tid</code>指向的定时器关闭，并不会将<code>tid</code>置为<code>null</code></p>\n<p>如果不在适当的时机清除定时器，每次事件触发都会多一个延时器，延时器之间互相干扰，造成紊乱。</p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">JSON.stringify()</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>基本用法：</p>\n<ul>\n<li><p>默认情况下JSON.stringify()会输出不包含空格或缩进的JSON字符串</p>\n</li>\n<li><p>在序列化JavaScript对象时，所有函数和原型成员都会有意地在结果中省略。此外，值为<code>undefined</code>和<code>Symbol</code>的任何属性也会被跳过。最终得到的就是所有实例属性均为有效JSON数据类型的表示。正则则会变为空对象</p>\n</li>\n<li><p>一共能接受3个参数，第二个参数是过滤器，可以是数组或函数；第三个参数是用于缩进结果JSON字符串的选项</p>\n</li>\n</ul>\n<p>第二个参数：</p>\n<ul>\n<li><p>如果第二个参数是一个数组，那么<code>JSON.stringify()</code>返回的结果中只包含该数组中列出的对象属性：</p>\n</li>\n<li><p>如果第二个参数是一个函数，则行为又有不同。提供的函数接收两个参数：属性名（key）和属性值（value）。可以根据这个key决定要对相应属性执行什么操作</p>\n</li>\n</ul>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> userInfo = {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;tom&quot;</span>,\n    <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">23</span>,\n    <span class=\"hljs-attr\">address</span>: <span class=\"hljs-string\">&quot;Shanghai&quot;</span>\n}\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(userInfo, [<span class=\"hljs-string\">&quot;name&quot;</span>]));\n<span class=\"hljs-comment\">// {&quot;name&quot;:&quot;tom&quot;}</span>\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(userInfo, <span class=\"hljs-function\">(<span class=\"hljs-params\">key, value</span>) =&gt;</span> key === <span class=\"hljs-string\">&quot;name&quot;</span> ? value.<span class=\"hljs-title function_\">toUpperCase</span>() : value))\n<span class=\"hljs-comment\">// {&quot;name&quot;:&quot;TOM&quot;,&quot;age&quot;:23,&quot;address&quot;:&quot;Shanghai&quot;}</span>\n</code></pre>\n<p>第三个参数：</p>\n<p>控制缩进和空格</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> userInfo = {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;tom&quot;</span>,\n    <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">23</span>,\n    <span class=\"hljs-attr\">address</span>: <span class=\"hljs-string\">&quot;Shanghai&quot;</span>\n}\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(userInfo, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-number\">4</span>))\n<span class=\"hljs-comment\">/*\n{\n    &quot;name&quot;: &quot;tom&quot;,\n    &quot;age&quot;: 23,\n    &quot;address&quot;: &quot;Shanghai&quot;\n}\n*/</span>\n</code></pre>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">git 撤销修改</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p><code>git checkout .</code>撤销所有未<code>git add</code>的修改</p>\n<p><code>git reset --soft HEAD^</code>撤销所有<code>git commit</code></p>\n<p><code>git reset --hard HEAD^</code>撤销所有<code>git commit + git add</code></p>\n"}},"__N_SSG":true}