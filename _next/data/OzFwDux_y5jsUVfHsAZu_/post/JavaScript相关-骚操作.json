{"pageProps":{"post":{"title":"JavaScript相关-骚操作","tags":["JavaScript","骚操作"],"categories":"JavaScript","description":"## 自定义事件\n\n```js\nconst event = new Event('build');\n// Listen for the event.\nelem.addEventListener('build', function (e) { ... }, false);\n// Dispatch the event.\nelem.dispatchEvent(event);\n```\n\n## slee","createDate":"2020-12-02 15:08:45","updateDate":"2021-05-06 16:08:46","body":"\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">自定义事件</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> event = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Event</span>(<span class=\"hljs-string\">&#x27;build&#x27;</span>);\n<span class=\"hljs-comment\">// Listen for the event.</span>\nelem.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;build&#x27;</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">e</span>) { ... }, <span class=\"hljs-literal\">false</span>);\n<span class=\"hljs-comment\">// Dispatch the event.</span>\nelem.<span class=\"hljs-title function_\">dispatchEvent</span>(event);\n</code></pre>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">sleep函数</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">sleep</span> = (<span class=\"hljs-params\">time</span>) =&gt; <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve</span>) =&gt;</span> <span class=\"hljs-built_in\">setTimeout</span>(resolve, time));\n\n<span class=\"hljs-comment\">// 使用</span>\n<span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">test</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">sleep</span>(<span class=\"hljs-number\">5000</span>);        <span class=\"hljs-comment\">// sleep 5s</span>\n}\n</code></pre>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">判断事件触发源</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>使用<code>HTMLElement.contains</code>函数，判断所给元素和指定元素是不是父子关系</p>\n<p>事件代理中非常有用</p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">const关键字定义的常量对象不够&#39;常量&#39;的解决办法</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>使用<code>Object.freeze()</code>，这样虽然再给属性负值时不回报错，但会静默失败</p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">取cookie</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">getCookie</span> = (<span class=\"hljs-params\">name</span>) =&gt;<span class=\"hljs-string\">`; <span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">document</span>.cookie}</span>`</span>.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">`; <span class=\"hljs-subst\">${name}</span>=`</span>).<span class=\"hljs-title function_\">pop</span>().<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&#x27;;&#x27;</span>).<span class=\"hljs-title function_\">shift</span>();\n</code></pre>\n"}},"__N_SSG":true}