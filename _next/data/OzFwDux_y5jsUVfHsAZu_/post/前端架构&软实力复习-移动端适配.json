{"pageProps":{"post":{"title":"前端架构&软实力复习-移动端适配","tags":["移动端适配"],"categories":"2021复习","description":"## 移动端适配的具体含义\n\n为了在移动端让页面获得更好的显示效果，我们必须让**布局视口(宽度)=视觉视口(宽度)=理想视口(宽度)**。但一般情况下它们并不一致，因此我们需要一种方案 ~~(rem+vw)~~ 来让设计稿得到更完美的适配。\n\n## 三个视口\n\n### 布局视口\n\n![布局视口](https://mrrsblog.oss-cn-shanghai.aliyuncs.com/la","createDate":"2021-05-18 14:06:04","updateDate":"2021-05-18 23:21:35","body":"\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">移动端适配的具体含义</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>为了在移动端让页面获得更好的显示效果，我们必须让**布局视口(宽度)=视觉视口(宽度)=理想视口(宽度)**。但一般情况下它们并不一致，因此我们需要一种方案 <del>(rem+vw)</del> 来让设计稿得到更完美的适配。</p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">三个视口</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    \n      <h3>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">布局视口</span>\n        <span class=\"suffix\"></span>\n      </h3>\n    <p><img src=\"https://mrrsblog.oss-cn-shanghai.aliyuncs.com/layout_viewport.png\" alt=\"布局视口\"></p>\n<p>布局视口(<code>layout viewport</code>):当我们以百分比来之当一个元素的大小时，它的计算值是由这个元素的包含块计算而来的。当这个元素是最顶级的元素时，它就是基于布局视口来计算的。</p>\n<p>所以，布局视口是网页布局的基准窗口，在PC浏览器上，布局视口就等于当前浏览器的窗口大小（不包含滚动条、标签栏等）</p>\n<p>在移动端，布局视口被赋予一个默认值，大部分是<strong>980px</strong>，这保证PC的网页可以在手机浏览器上呈现，但是非常小，用户可以手动对网页进行放大</p>\n<p>我们可以使用<code>document.documentElement.clientWidth/clientWidth</code>来获取布局视口的大小</p>\n\n      <h3>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">视觉视口</span>\n        <span class=\"suffix\"></span>\n      </h3>\n    <p><img src=\"https://mrrsblog.oss-cn-shanghai.aliyuncs.com/visual_viewport.png\" alt=\"视觉视口\"></p>\n<p>视觉视口(<code>visual viewport</code>): 用户通过屏幕真是看到的区域</p>\n<p>视觉视口默认等于当前浏览器的窗口大小（包括滚动条等）</p>\n<p>当用户对浏览器进行缩放时，不会改变布局视口的大小，所以页面布局是不变的，但是<strong>缩放会改变视觉视口的大小</strong></p>\n<p>例如：用户将浏览器窗口放大了200%，这时浏览器窗口中的CSS像素会随着视觉视口的放大而放大，这时一个CSS像素会跨域更多的物理像素</p>\n<p>所以，布局视口会限制你的CSS布局，而视觉视口决定着用户具体能看到什么</p>\n<p>我们可以使用<code>window.innerWidth/innerHeight</code>来获取视觉视口的大小</p>\n\n      <h3>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">理想视口</span>\n        <span class=\"suffix\"></span>\n      </h3>\n    <p>布局视口在移动端展示的效果并不是一个理想的效果，所以理想视口(<code>ideal viewport</code>)就诞生了：网页在移动端展示的理想大小=设备独立像素</p>\n<p>当页面缩放比例为100%时，<strong>CSS像素=设备独立像素，理想视口=视觉视口</strong></p>\n<p>我们可以通过调用<code>screen.width/height</code>来获得理想视口的大小</p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">meta viewport</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p><code>meta</code>元素可提供相关页面的元信息（meta-information），比如针对搜索引擎和更新频度的描述和关键词。</p>\n<p>我们可以借助<code>meta</code>元素的<code>viewport</code>来帮助我们设置视口、缩放等，从而让移动端得到更好的展示效果</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;viewport&quot;</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;with=device-width; initial-scale=1; maxomum-scale=1; minmum-scale=1; user-scale=no;&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">meta</span>&gt;</span>\n</code></pre>\n<p><code>device-width</code>就是理想视口的宽度，<code>with=device-width</code>就相当于让布局视口等于理想视口</p>\n<p>由于<code>initial-scale = 理想视口宽度  / 视觉视口宽度</code>，所以设置<code>initial-scale=1</code>就相当于让视觉视口等于理想视口</p>\n<p>这时，1个CSS像素就等于一个设备独立像素，而且我们也是基于理想视口来进行布局的，所以呈现出来的页面布局在各种设备上都能大致相似</p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\"><del>rem + vw适配</del></span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>突然写不下去了，不同屏幕下应该显示不同的内容，<strong>屏幕大应该是显示更多的ui而不是更大的ui</strong>。等看到牛逼的文章再回来补充</p>\n"}},"__N_SSG":true}