{"pageProps":{"post":{"title":"SVG学习-stroke-dashoffset和stroke-dasharray","tags":["SVG"],"categories":"前端架构&软实力","description":"## 起因\n\n周末玩游戏的时候发现游戏内有一个按钮的交互挺有趣，类似于这种效果\n\n![button-svg](https://mrrsblog.oss-cn-shanghai.aliyuncs.com/button-svg.gif)\n\n点击后边框有一个进度条，鼠标长按进度会增加，抬起后回到起始位置\n\n咦，有点意思\n\n![因垂斯汀](https://mrrsblog.oss-cn-shangha","createDate":"2021-11-24 13:35:30","updateDate":"2021-11-25 21:54:36","body":"\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">起因</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>周末玩游戏的时候发现游戏内有一个按钮的交互挺有趣，类似于这种效果</p>\n<p><img src=\"https://mrrsblog.oss-cn-shanghai.aliyuncs.com/button-svg.gif\" alt=\"button-svg\"></p>\n<p>点击后边框有一个进度条，鼠标长按进度会增加，抬起后回到起始位置</p>\n<p>咦，有点意思</p>\n<p><img src=\"https://mrrsblog.oss-cn-shanghai.aliyuncs.com/interesting.gif\" alt=\"因垂斯汀\"></p>\n<p>于是就想着能不能使用前端的一些技术实现🤔</p>\n<p>于是开始一系列的尝试（此处省略若干字），发现触及到知识盲区了😭，根本无从下手</p>\n<p><img src=\"https://mrrsblog.oss-cn-shanghai.aliyuncs.com/interesting2.png\" alt=\"知识盲区\"></p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">转机</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>突然不知道怎么就想到SVG了，想着要不试试？没准能行，然后一顿搜索，眼前一亮</p>\n<p>有大佬使用<code>stroke</code>和<code>stroke-dashoffset</code>及<code>stroke-dasharray</code>做出进度条，同时又想到SVG可以和JavaScript交互，貌似可以实现我的需求</p>\n<p><img src=\"https://mrrsblog.oss-cn-shanghai.aliyuncs.com/interesting3.png\" alt=\"奇怪的知识增加了\"></p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">stork-dashoffset和stork-dasharray</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>那么<code>stroke</code>和<code>stroke-dashoffset</code>以及<code>stroke-dasharray</code>是何方神圣腻？🤔</p>\n<p><code>stroke</code>: 描边，接受一个颜色值。可作用于大部分SVG元素</p>\n<p><code>stroke-dasharray</code>: 用于创建虚线描边</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 表示：虚线长10，间距10，然后重复 虚线长10，间距10</span>\nstroke-dasharray = <span class=\"hljs-string\">&#x27;10&#x27;</span>\n\n<span class=\"hljs-comment\">// 表示：虚线长10，间距5，然后重复 虚线长10，间距5</span>\nstroke-dasharray = <span class=\"hljs-string\">&#x27;10, 5&#x27;</span>\n\n<span class=\"hljs-comment\">// 当然还有更复杂的设置这里就不细讲了</span>\n</code></pre>\n<p><code>stroke-dashoffset</code>：字如其意，表示stroke的偏移。这个属性是相对于起始点的偏移，<strong>正数</strong>偏移x值的时候，相当于往<strong>左</strong>移动了x个长度单位，<strong>负数</strong>偏移x的时候，相当于往<strong>右</strong>移动了x个长度单位</p>\n<p>需要注意的是，不管偏移的方向是哪边，要记得dasharray 是循环的，也就是 虚线-间隔-虚线-间隔。\n<code>stroke-dashoffset</code>要搭配<code>stroke-dasharray</code>才能看得出来效果，非虚线的话，是无法看出偏移的。</p>\n<p>概念有点抽象，来看一个MDN的例子，图中红线段是偏移的距离</p>\n<p><img src=\"https://mrrsblog.oss-cn-shanghai.aliyuncs.com/stroke-dashoffset.png\" alt=\"stroke-dashoffset\"></p>\n<p>上图效果分别是：</p>\n<ol>\n<li>没有虚线</li>\n<li><code>stroke-dasharray=&quot;3 1&quot;</code> ，虚线没有设置偏移，也就是stroke-dashoffset值为0</li>\n<li><code>stroke-dashoffset=&quot;3&quot;</code>，偏移正数，虚线整体左移了3个单位，图中3后面的红线段，就是起始线段，线段之后是1个单位的间隔，我们可见区域从这个间隔开始，然后循环 3-1,3-1的虚线-间隔-虚线-间隔</li>\n<li><code>stroke-dashoffset=&quot;-3&quot;</code>，偏移负数，虚线整体右移动了3个单位，由于dasharray 是循环的，前面偏移的位置会有dasharray 填充上</li>\n<li><code>stroke-dashoffset=&quot;1&quot;</code>，偏移正数，虚线整体左移了1个单位，最终呈现出来的效果跟 线段4 一样</li>\n</ol>\n<p><strong>利用这两个属性，我们可以做出好看的动画效果</strong></p>\n<ol>\n<li><p>设置<code>stroke-dasharray</code>为<em>图形边长</em></p>\n</li>\n<li><p>设置<code>stroke-dashoffset</code>为<em>图形边长</em></p>\n</li>\n<li><p>动态减少<code>stroke-dashoffset</code>到0</p>\n</li>\n</ol>\n<p>简析：第一步后就有一个长度为图形边长的<em>长条</em>，第二步由于设置了<code>stroke-dashoffset</code>也为图形边长，因此<em>长条</em>会被推到不可见的位置，再通过第三步中动态减少<code>stroke-dashoffset</code>，第一步中绘制的<em>长条</em>就会慢慢<em>增长</em>并显示出来</p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">再次挑战</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>刚开始是想使用<code>rect</code>来做的，但发现游戏中的按钮是有一定的圆角的，<code>rect</code>在设置圆角之后再添加<code>storke</code>有点丑，遂放弃，改用<code>path</code>实现</p>\n<p>观察原图，实现思路如下：</p>\n<ol>\n<li><p>边框可以使用<code>path</code>绘制出来</p>\n</li>\n<li><p>边框背景也使用<code>path</code>绘制（同一套<code>d</code>属性），设置一下<code>opacity</code>即可</p>\n</li>\n<li><p>背景色使用SVG的<code>fill</code>填充出来</p>\n</li>\n<li><p>文字使用<code>text</code>绘制</p>\n</li>\n</ol>\n<p>实现代码如下：</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-keyword\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">&quot;en&quot;</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">&quot;UTF-8&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">http-equiv</span>=<span class=\"hljs-string\">&quot;X-UA-Compatible&quot;</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;IE=edge&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;viewport&quot;</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>SVG<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\">\n        <span class=\"hljs-selector-id\">#svg</span><span class=\"hljs-selector-pseudo\">:active</span> {\n            <span class=\"hljs-attribute\">opacity</span>: <span class=\"hljs-number\">0.9</span>;\n        }\n        <span class=\"hljs-selector-id\">#path</span>, <span class=\"hljs-selector-id\">#background</span> {\n            stroke-<span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">3</span>;\n            stroke: <span class=\"hljs-number\">#f00</span>;\n            <span class=\"hljs-attribute\">cursor</span>: pointer;\n            \n            <span class=\"hljs-comment\">/** \n             * 修正位置，设置水平垂直居中\n             */</span>\n            <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(<span class=\"hljs-number\">5px</span>, <span class=\"hljs-number\">5px</span>);\n        }\n        <span class=\"hljs-selector-id\">#background</span> {\n            <span class=\"hljs-attribute\">opacity</span>: <span class=\"hljs-number\">0.2</span>;\n        }\n        <span class=\"hljs-selector-id\">#text</span> {\n            user-select: none;\n            <span class=\"hljs-attribute\">cursor</span>: pointer;\n            fill: <span class=\"hljs-number\">#000</span>;\n            \n            <span class=\"hljs-comment\">/** \n             * 设置水平垂直居中\n             */</span>\n            dominant-baseline: middle;\n            text-anchor: middle;\n        }\n    </span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\">\n        <span class=\"hljs-keyword\">let</span> rafId = -<span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">WIDTH</span> = <span class=\"hljs-number\">70</span>;\n        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">HEIGHT</span> = <span class=\"hljs-number\">30</span>;\n        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">RADIUS</span> = <span class=\"hljs-number\">6</span>;\n        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">DEFAULT_OFFSET</span> = <span class=\"hljs-number\">15</span>;\n        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">STORK_LENGTH</span> = (<span class=\"hljs-variable constant_\">WIDTH</span> + <span class=\"hljs-variable constant_\">HEIGHT</span>) &lt;&lt; <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">STEP</span> = <span class=\"hljs-number\">5</span>;\n\n        <span class=\"hljs-comment\">/**\n         * <span class=\"hljs-doctag\">@description</span>: 生成带有圆角的path\n         */</span>\n        <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">roundedRect</span>(<span class=\"hljs-params\">w, h, tlr, trr, brr, blr</span>) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`M 0 <span class=\"hljs-subst\">${tlr}</span> A <span class=\"hljs-subst\">${tlr}</span> <span class=\"hljs-subst\">${tlr}</span> 0 0 1 <span class=\"hljs-subst\">${tlr}</span> 0 L <span class=\"hljs-subst\">${w - trr}</span> 0 `</span>\n                + <span class=\"hljs-string\">`A <span class=\"hljs-subst\">${trr}</span> <span class=\"hljs-subst\">${trr}</span> 0 0 1 <span class=\"hljs-subst\">${w}</span> <span class=\"hljs-subst\">${trr}</span> L <span class=\"hljs-subst\">${w}</span> <span class=\"hljs-subst\">${h - brr}</span> `</span>\n                + <span class=\"hljs-string\">`A <span class=\"hljs-subst\">${brr}</span> <span class=\"hljs-subst\">${brr}</span> 0 0 1 <span class=\"hljs-subst\">${w - brr}</span> <span class=\"hljs-subst\">${h}</span> L <span class=\"hljs-subst\">${blr}</span> <span class=\"hljs-subst\">${h}</span> `</span>\n                + <span class=\"hljs-string\">`A <span class=\"hljs-subst\">${blr}</span> <span class=\"hljs-subst\">${blr}</span> 0 0 1 0 <span class=\"hljs-subst\">${h - blr}</span> Z`</span>;\n        }\n\n        <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">animation</span>(<span class=\"hljs-params\"></span>) {\n            <span class=\"hljs-keyword\">const</span> path = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">&#x27;#path&#x27;</span>);\n            <span class=\"hljs-keyword\">const</span> preOffset = path.<span class=\"hljs-title function_\">getAttribute</span>(<span class=\"hljs-string\">&#x27;stroke-dashoffset&#x27;</span>);\n            <span class=\"hljs-keyword\">const</span> newOffset = preOffset - <span class=\"hljs-variable constant_\">STEP</span>;\n            path.<span class=\"hljs-title function_\">setAttribute</span>(<span class=\"hljs-string\">&#x27;stroke-dashoffset&#x27;</span>, newOffset);\n            <span class=\"hljs-keyword\">if</span> (newOffset &gt;= <span class=\"hljs-number\">0</span>) {\n                rafId = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">requestAnimationFrame</span>(animation);\n            } <span class=\"hljs-keyword\">else</span> {\n                path.<span class=\"hljs-title function_\">setAttribute</span>(<span class=\"hljs-string\">&#x27;stroke-dashoffset&#x27;</span>, <span class=\"hljs-variable constant_\">STORK_LENGTH</span> - <span class=\"hljs-variable constant_\">DEFAULT_OFFSET</span>);\n                <span class=\"hljs-title function_\">alert</span>(<span class=\"hljs-string\">&#x27;success&#x27;</span>);\n            }\n        }\n\n        <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">onMouseDown</span>(<span class=\"hljs-params\"></span>) {\n            rafId = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">requestAnimationFrame</span>(animation);\n        }\n\n        <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">onMouseUp</span>(<span class=\"hljs-params\"></span>) {\n            <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">cancelAnimationFrame</span>(rafId);\n            path.<span class=\"hljs-title function_\">setAttribute</span>(<span class=\"hljs-string\">&#x27;stroke-dashoffset&#x27;</span>, <span class=\"hljs-variable constant_\">STORK_LENGTH</span> - <span class=\"hljs-variable constant_\">DEFAULT_OFFSET</span>);\n        }\n\n        <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;load&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\n            <span class=\"hljs-keyword\">const</span> path = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">&#x27;#path&#x27;</span>);\n            <span class=\"hljs-keyword\">const</span> background = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">&#x27;#background&#x27;</span>);\n            path.<span class=\"hljs-title function_\">setAttribute</span>(<span class=\"hljs-string\">&#x27;stroke-dashoffset&#x27;</span>, <span class=\"hljs-variable constant_\">STORK_LENGTH</span> - <span class=\"hljs-variable constant_\">DEFAULT_OFFSET</span>);\n            path.<span class=\"hljs-title function_\">setAttribute</span>(<span class=\"hljs-string\">&#x27;stroke-dasharray&#x27;</span>, <span class=\"hljs-variable constant_\">STORK_LENGTH</span>);\n\n            <span class=\"hljs-keyword\">const</span> roundedPath = <span class=\"hljs-title function_\">roundedRect</span>(<span class=\"hljs-variable constant_\">WIDTH</span>, <span class=\"hljs-variable constant_\">HEIGHT</span>, <span class=\"hljs-variable constant_\">RADIUS</span>, <span class=\"hljs-variable constant_\">RADIUS</span>, <span class=\"hljs-variable constant_\">RADIUS</span>, <span class=\"hljs-variable constant_\">RADIUS</span>);\n            path.<span class=\"hljs-title function_\">setAttribute</span>(<span class=\"hljs-string\">&#x27;d&#x27;</span>, roundedPath);\n            background.<span class=\"hljs-title function_\">setAttribute</span>(<span class=\"hljs-string\">&#x27;d&#x27;</span>, roundedPath);\n        });\n    </span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">svg</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;svg&quot;</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">&quot;80&quot;</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">&quot;40&quot;</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">&quot;#ccc&quot;</span> <span class=\"hljs-attr\">onmousedown</span>=<span class=\"hljs-string\">&quot;onMouseDown()&quot;</span> <span class=\"hljs-attr\">onmouseup</span>=<span class=\"hljs-string\">&quot;onMouseUp()&quot;</span>\n        <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://www.w3.org/2000/svg&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">path</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;path&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">path</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">path</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;background&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">path</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">text</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;text&quot;</span> <span class=\"hljs-attr\">x</span>=<span class=\"hljs-string\">&quot;40&quot;</span> <span class=\"hljs-attr\">y</span>=<span class=\"hljs-string\">&quot;20&quot;</span>&gt;</span>click me<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">text</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">svg</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n<p>最终效果</p>\n<p><img src=\"https://mrrs878.github.io/awesome/static/img/button.gif\" alt=\"最终效果\"></p>\n<p><a href=\"https://mrrs878.github.io/awesome/interactive-button/index.html\">在线体验</a></p>\n<p>参考：</p>\n<p><a href=\"https://www.cnblogs.com/daisygogogo/p/11044353.html\">SVG学习之stroke-dasharray 和 stroke-dashoffset 详解</a></p>\n"}},"__N_SSG":true}