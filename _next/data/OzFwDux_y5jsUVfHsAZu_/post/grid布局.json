{"pageProps":{"post":{"title":"grid布局","tags":["grid"],"categories":"CSS","description":"## 一些属性\n\n### grid-auto-flow\n\n控制自动布局算法怎样运作，精确指定在网格中被自动布局的元素怎样排列\n\n``` css\ngrid-auto-flow: row;\ngrid-auto-flow: column;\ngrid-auto-flow: row dense;\ngrid-auto-flow: column dense;\n```\n\n取值：\n\n- row，指定自动布局算法","createDate":"2021-08-31 11:21:24","updateDate":"8/24/2021, 12:12:36 PM","body":"\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">一些属性</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    \n      <h3>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">grid-auto-flow</span>\n        <span class=\"suffix\"></span>\n      </h3>\n    <p>控制自动布局算法怎样运作，精确指定在网格中被自动布局的元素怎样排列</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-attribute\">grid-auto-flow</span>: row;\n<span class=\"hljs-attribute\">grid-auto-flow</span>: column;\n<span class=\"hljs-attribute\">grid-auto-flow</span>: row dense;\n<span class=\"hljs-attribute\">grid-auto-flow</span>: column dense;\n</code></pre>\n<p>取值：</p>\n<ul>\n<li><p>row，指定自动布局算法按照通过逐行填充来排列元素，在必要时增加新行。如果既没有指定 row 也没有 column，则默认为 row</p>\n</li>\n<li><p>column，指定自动布局算法通过逐列填充来排列元素，在必要时增加新列</p>\n</li>\n<li><p>dense，指定自动布局算法使用一种“稠密”堆积算法，如果后面出现了稍小的元素，则会试图去填充网格中前面留下的空白。这样做会填上稍大元素留下的空白，但同时也可能导致原来出现的次序被打乱。如果省略它，使用一种「稀疏」算法，在网格中布局元素时，布局算法只会「向前」移动，永远不会倒回去填补空白。这保证了所有自动布局元素「按照次序」出现，即使可能会留下被后面元素填充的空白</p>\n</li>\n</ul>\n"}},"__N_SSG":true}