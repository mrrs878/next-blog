{"pageProps":{"post":{"title":"前端架构&软实力复习-0","tags":["前端架构","软实力"],"categories":"2021复习","description":"## npm版本\n\n``` js\n\"5.0.3\",\n\"~5.0.3\",\n\"^5.0.3\"\n```\n\n- \"5.0.3\"表示安装指定的5.0.3版本\n- \"～5.0.3\"表示安装5.0.X中最新的版本\n- \"^5.0.3\"表示安装5.X.X中最新的版本\n\n## fullScreen\n\n``` html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>","createDate":"2021-05-14 08:20:12","updateDate":"2021-06-28 10:59:47","body":"\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">npm版本</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <pre><code class=\"hljs language-js\"><span class=\"hljs-string\">&quot;5.0.3&quot;</span>,\n<span class=\"hljs-string\">&quot;~5.0.3&quot;</span>,\n<span class=\"hljs-string\">&quot;^5.0.3&quot;</span>\n</code></pre>\n<ul>\n<li>&quot;5.0.3&quot;表示安装指定的5.0.3版本</li>\n<li>&quot;～5.0.3&quot;表示安装5.0.X中最新的版本</li>\n<li>&quot;^5.0.3&quot;表示安装5.X.X中最新的版本</li>\n</ul>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">fullScreen</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-keyword\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">&quot;en&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">&quot;UTF-8&quot;</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">http-equiv</span>=<span class=\"hljs-string\">&quot;X-UA-Compatible&quot;</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;IE=edge&quot;</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;viewport&quot;</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Document<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\">\n        <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">onFullScreenClick</span>(<span class=\"hljs-params\"></span>) {\n          <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-number\">111</span>);\n          <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">&#x27;#fullScreenImage&#x27;</span>).<span class=\"hljs-title function_\">requestFullscreen</span>();\n        }\n      </span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onclick</span>=<span class=\"hljs-string\">&quot;onFullScreenClick()&quot;</span>&gt;</span>\n        full screen\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;fullScreenImage&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://ns-strategy.cdn.bcebos.com/ns-strategy/upload/fc_big_pic/part-00139-2321.jpg&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">img</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">git命令</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <ul>\n<li><code>git commit --amend -m &#39;提交原因&#39;</code> 修改最近一次commit的信息</li>\n</ul>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">有限状态机</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>有限状态机（finite state machine），计算机科学中用来对象行为建模的工具，其作用主要是描述对象在它的生命周期内所经历的状态队列，以及如何响应来自外界的各种事件</p>\n<p>状态机有基本几个要素：</p>\n<ul>\n<li>当前所处状态。在各个时刻只处于一种状态</li>\n<li>状态转移函数。在某种条件下，会从一种状态转移至另一种状态</li>\n<li>有限状态序列。拥有有限，可枚举的状态数</li>\n</ul>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">监听页面崩溃</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>被监听页面和监听者建立一种<strong>心跳机制</strong>，每隔一定时间向监听者发送一次心跳；监听者根据心跳来推断被监听者的情况。</p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">微前端</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>将一个大型应用划分为一个主应用和一个或多个小应用，应用间相互独立，可相互通信</p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">白屏时间/渲染时间</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>白屏时间: <code>window.performance.timing.domLoading - window.performance.timing.navigationStart</code></p>\n<p>首屏时间：<code>window.performance.timing.domInteractive - window.performace.timing.navigationStart</code></p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">npm ci</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p><code>npm ci</code>（6.0版本以上）</p>\n<ol>\n<li>会删除项目中的<code>node_modules</code>文件夹</li>\n<li>按照项目中的<code>package-lock.json</code>来安装确切版本的依赖项</li>\n</ol>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">continuous-local-storage</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p><code>continuous-local-storage</code>是nodejs中类似本地存储的，它可以实现多个文件中数据共享，但是不用挂载到全局对象</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">//a.js</span>\n<span class=\"hljs-keyword\">const</span> storage=<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;continuous-local-storage&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> space=stroage.<span class=\"hljs-title function_\">createNameSpace</span>(<span class=\"hljs-string\">&#x27;data&#x27;</span>);\nspace.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;user&#x27;</span>,<span class=\"hljs-string\">&#x27;xx&#x27;</span>)\n \n<span class=\"hljs-comment\">//b.js</span>\n<span class=\"hljs-keyword\">const</span> storage=<span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;continuous-local-storage&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> space=storage.<span class=\"hljs-title function_\">getNameSpace</span>(<span class=\"hljs-string\">&#x27;data&#x27;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(space.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;user&#x27;</span>))\n<span class=\"hljs-comment\">//输出xx</span>\n</code></pre>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">参考</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p><a href=\"https://mp.weixin.qq.com/s/uQ6YFaFPUkaVkS8Y_F865w\">前端:从状态管理到有限状态机的思考</a></p>\n"}},"__N_SSG":true}