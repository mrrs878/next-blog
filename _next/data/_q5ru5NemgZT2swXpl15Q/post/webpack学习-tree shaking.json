{"pageProps":{"post":{"title":"webpack学习-tree shaking","tags":["webpack","Tree-Shaking"],"categories":"webpack","description":"学习 webpack5 中 tree shaking 原理\n\n## WHAT\n\n一种优化技术\n\n使用方式：\n\n1. 使用 ESM 编写代码\n\n2. 启用标记功能。配置 webpack 的 `optimization.useExports = true`\n\n3. 启用清除功能。有多种配置方式\n\n- 配置 `mode = production`\n- 配置 `optimization.minimize","createDate":"2022-05-30 11:27:17","updateDate":"2022-05-30 21:38:52","body":"<p>学习 webpack5 中 tree shaking 原理</p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">WHAT</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>一种优化技术</p>\n<p>使用方式：</p>\n<ol>\n<li><p>使用 ESM 编写代码</p>\n</li>\n<li><p>启用标记功能。配置 webpack 的 <code>optimization.useExports = true</code></p>\n</li>\n<li><p>启用清除功能。有多种配置方式</p>\n</li>\n</ol>\n<ul>\n<li>配置 <code>mode = production</code></li>\n<li>配置 <code>optimization.minimize = true</code></li>\n<li>提供 <code>optimization.minimizer</code></li>\n</ul>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">WHY</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>减少打包文件体积，提升网站性能</p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">HOW</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>基于 ESM，静态分析哪些模块没有被用到，借助于一些 DCI 工具，删除没用到的代码</p>\n<p>过程分为两步</p>\n<ol>\n<li><p>基于两个插件，标记没有用到的模块（代码）导出，并删除没用到的导出</p>\n</li>\n<li><p>删除</p>\n</li>\n</ol>\n\n      <h3>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">标记</span>\n        <span class=\"suffix\"></span>\n      </h3>\n    <p>其中标记过程又可分为三步，标记的效果就是<strong>删除没有被其它模块使用的导出语句</strong>，但并<strong>没有删除源码</strong></p>\n<ol>\n<li>make 阶段</li>\n</ol>\n<p>使用 <code>FlagDependencyExportsPlugin</code> 收集模块导出变量并记录到 <code>module.ExportInfo</code> 变量中</p>\n<ol start=\"2\">\n<li>seal 阶段</li>\n</ol>\n<p>使用 <code>FlagDependencyUsagePlugin</code> 遍历 <code>module.ExportInfo</code> ，修改 <code>module.exportInfo._usedInRuntime</code> 记录使用到的变量</p>\n<ol start=\"3\">\n<li>生成阶段</li>\n</ol>\n<p>若变量没有被其它模块使用则删除对应的导出语句，并打上标记</p>\n\n      <h3>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">删除</span>\n        <span class=\"suffix\"></span>\n      </h3>\n    <p>将由 Terser、UglifyJS 等 DCE 工具“摇”掉这部分无效代码，构成完整的 Tree Shaking 操作</p>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">总结</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p>综上所述，Webpack 中 Tree Shaking 的实现分为如下步骤：</p>\n<ol>\n<li><p>在 <code>FlagDependencyExportsPlugin</code> 插件中根据模块的 <code>dependencies</code> 列表收集模块导出值，并记录到 ModuleGraph 体系的 <code>exportsInfo</code> 中</p>\n</li>\n<li><p>在 <code>FlagDependencyUsagePlugin</code> 插件中收集模块的导出值的使用情况，并记录到 <code>exportInfo._usedInRuntime</code> 集合中</p>\n</li>\n<li><p>在 <code>HarmonyExportXXXDependency.Template.apply</code> 方法中根据导出值的使用情况生成不同的导出语句\n使用 DCE 工具删除 Dead Code，实现完整的树摇效果</p>\n</li>\n</ol>\n\n      <h2>\n        <span class=\"prefix\"></span>\n        <span class=\"content\">参考</span>\n        <span class=\"suffix\"></span>\n      </h2>\n    <p><a href=\"https://mp.weixin.qq.com/s?__biz=Mzg3OTYwMjcxMA==&amp;mid=2247484579&amp;idx=1&amp;sn=f687adfc6a7ea155c0fdf504defb65b5&amp;chksm=cf00b9daf87730cc2bf7934f6fd40c50ad28ef4e418922740aedacc998f2fa62388d4c81649c&amp;scene=178&amp;cur_album_id=1856066636953272321#rd\">Webpack 原理系列九：Tree-Shaking 实现原理</a></p>\n"}},"__N_SSG":true}